{"mappings":"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","sources":["src/services/MovieObjectByID.js","src/services/modalTemplate.js"],"sourcesContent":["import { getMovies } from \"./getMovies\";\n\nexport async function getMovieByID(id) {\n    const nul = null;\n    try {\n        const movieObj = await getMovies(`/movie/${id}`, nul, 1)\n        console.log(movieObj.data); //прилітає об'єкт з детальною інформацією\n        return movieObj.data\n    } catch (error) {\n        console.error(error);\n    }\n}\n\n//!!!!!!! функція не підключена до index.html\n// console.log(getMovieByID(990691));\n\n\n//id-шники для прикладу\n// 990691\n// 718789\n// 453395","import { getMovieByID } from './MovieObjectByID';\nimport {\n  getWatchedMoviesInStorage,\n  getQueueMoviesInStorage,\n} from './myLibraryPage';\n\nconst openModalCard = document.querySelector('[data-modalCard-open]');\nconst closeModalCard = document.querySelector('[data-modalCard-close]');\nconst modalCardCont = document.querySelector('[data-modalCard]');\nconst backdrop = document.querySelector('[backdrop]');\nconst cardContMarking = document.querySelector('.card__cont-marking');\nconst cardTableContainer = document.querySelector('.card__table');\nconst addToWatchedButton = document.querySelector('[data-add-to-watched]');\nconst addToQueueButton = document.querySelector('[data-add-to-queue]');\n\nopenModalCard.addEventListener('click', onOpenModalCard);\ncloseModalCard.addEventListener('click', onCloseModalCard);\nmodalCardCont.addEventListener('click', onBackModalDropClick);\nwindow.addEventListener('keydown', onEscClick);\n\nconst KEY_WATCHED = 'watched-movies-in-storage';\nconst KEY_QUEUE = 'queue-movies-in-storage';\n\nfunction onCloseModalCard() {\n  modalCardCont.classList.add('no-activ');\n  const htmlEl = document.getElementsByTagName('HTML')[0];\n  htmlEl.classList.remove('no-scroll');\n  cardContMarking.innerHTML = '';\n  cardTableContainer.innerHTML = '';\n}\n\nfunction onBackModalDropClick(evt) {\n  if (!evt.target.classList.contains('card__cont')) {\n    return;\n  }\n  onCloseModalCard();\n}\n\nfunction onEscClick(evt) {\n  if (evt.key === 'Escape') {\n    onCloseModalCard();\n    backdrop.classList.add('is-hidden');\n  }\n}\n\nfunction onOpenModalCard(event) {\n  if (event.target.classList.contains('grid-movie-card')) {\n    const filmID = event.target.attributes.id.value;\n\n    addToQueueButton.classList.remove('card-buton-change')\n    addToWatchedButton.classList.remove('card-buton-change')\n\n    getMovieByID(filmID).then(res => cardMarkUp(res));\n\n    modalCardCont.classList.remove('no-activ');\n    const htmlEl = document.getElementsByTagName('HTML')[0];\n    htmlEl.classList.add('no-scroll');\n  }\n  return;\n}\n\nfunction cardMarkUp(filmObject) {\n  checkMovieByIdWatched(filmObject, KEY_WATCHED);\n  checkMovieByIdQueue(filmObject, KEY_QUEUE);\n  const markUPImg = `<img class=\"card__img\" src=\"http://image.tmdb.org/t/p/w500${filmObject.poster_path}\" alt=\"${filmObject.title}\" />`;\n  cardContMarking.insertAdjacentHTML('afterbegin', markUPImg);\n  const trimMarkupVote = trimMarkup(filmObject.vote_average);\n  const trimMarkupPopular = trimMarkup(filmObject.popularity);\n\n  const markUp = `<h1 class=\"card__table-heder\">${filmObject.title}</h1>\n      <table class=\"card__table\">\n        <tr class=\"card__table-vote\">\n          <td class=\"card__table-name \">Vote / Votes</td>\n          <td class=\"card__table-value \"><span class=\"average\">${trimMarkupVote}</span> / <span class=\"vote\">${filmObject.vote_count}</span></td>\n        </tr>\n        <tr class=\"card__table-popularity\">\n          <td class=\"card__table-name\">Popularity</td>\n          <td class=\"card__table-value\">${trimMarkupPopular}</td>\n        </tr>\n        <tr class=\"card__table-title\">\n          <td class=\"card__table-name\">Original Title</td>\n          <td class=\"card__table-value\">${filmObject.title}</td>\n        </tr>\n        <tr class=\"card__table-genre\">\n          <td class=\"card__table-name last-child\">Genre</td>\n          <td class=\"card__table-value last-child\">${filmObject.genre}</td>\n        </tr>\n      </table>\n      <div class=\"card__about\">\n        <h2 class=\"card__about-heder\">About</h2>\n        <p class=\"card__about-text\">${filmObject.overview}</p>\n      </div>`;\n  cardTableContainer.insertAdjacentHTML('afterbegin', markUp);\n}\n\nexport function addWatchedMoviesInStorage(filmObject) {\n  const localStorageArr = localStorage.getItem(KEY_WATCHED) || [];\n  const parsedArr = JSON.parse(localStorage.getItem(KEY_WATCHED)) || [];\n  if (!localStorageArr.includes(filmObject.id)) {\n    parsedArr.push(filmObject);\n    localStorage.setItem(KEY_WATCHED, JSON.stringify(parsedArr));\n  }\n\n  return;\n}\nexport function addQueueMoviesInStorage(filmObject) {\n  const localStorageArrq = localStorage.getItem(KEY_QUEUE) || [];\n  const parsedArrq = JSON.parse(localStorage.getItem(KEY_QUEUE)) || [];\n  console.log(parsedArrq, 'распасеный массив');\n  if (!localStorageArrq.includes(filmObject.id)) {\n    parsedArrq.push(filmObject);\n    localStorage.setItem(KEY_QUEUE, JSON.stringify(parsedArrq));\n  }\n  return;\n}\nfunction trimMarkup(trim) {\n  const trimMarkup = trim.toFixed(1);\n  return trimMarkup;\n}\n\nfunction checkMovieByIdWatched(movie, key) {\n  const lockalStorageId = JSON.parse(localStorage.getItem(key)) || [];\n  console.log(lockalStorageId, 'Просмотренные фильмы');\n  const includesMovie = lockalStorageId.find(elem => elem.id === movie.id);\n  console.log(includesMovie, 'нука');\n  if (!includesMovie) {\n    addToWatchedButton.addEventListener('click', () =>\n\n      addWatchedMoviesInStorage(movie)\n    );\n    addToWatchedButton.textContent = 'Add to watched';\n  } else if (includesMovie) {\n    addToWatchedButton.addEventListener('click', () =>\n      removeMovieFromWatched(movie, key)\n    );\n    addToWatchedButton.textContent = 'Remove from watched';\n  }\n}\nfunction checkMovieByIdQueue(movie, key) {\n  const lockalStorageId = JSON.parse(localStorage.getItem(key)) || [];\n  console.log(lockalStorageId, 'Просмотренные фильмы');\n  const includesMovie = lockalStorageId.find(elem => elem.id === movie.id);\n\n  if (!includesMovie) {\n    console.log(lockalStorageId.includes(includesMovie));\n    addToQueueButton.addEventListener('click', () =>\n      addQueueMoviesInStorage(movie)\n    );\n    addToQueueButton.textContent = 'Add to queue';\n  } else if (includesMovie) {\n    addToQueueButton.addEventListener('click', () =>\n\n      removeMovieFromQueue(movie, key)\n    );\n    addToQueueButton.textContent = 'Remove from queue';\n  }\n}\n\nfunction removeMovieFromWatched(movie) {\n  const localStorageArr = JSON.parse(localStorage.getItem(KEY_WATCHED));\n  const includesMovie = localStorageArr.find(elem => elem.id === movie.id);\n  if (includesMovie) {\n    const updatedArr = localStorageArr.filter(elem => elem.id !== movie.id);\n    localStorage.setItem(KEY_WATCHED, JSON.stringify(updatedArr));\n  }\n\n  getWatchedMoviesInStorage();\n}\n\nfunction removeMovieFromQueue(movie) {\n  const localStorageArr = JSON.parse(localStorage.getItem(KEY_QUEUE));\n  const includesMovie = localStorageArr.find(elem => elem.id === movie.id);\n  if (includesMovie) {\n    const updatedArr = localStorageArr.filter(elem => elem.id !== movie.id);\n    localStorage.setItem(KEY_QUEUE, JSON.stringify(updatedArr));\n  }\n\n  getQueueMoviesInStorage();\n}\n\n\n// Dynamic changing text-content on modal buttons \n\naddToQueueButton.addEventListener('click', () => {\n  if (addToQueueButton.textContent == \"Remove from queue\") {\n    addToQueueButton.textContent = \"Removed from Queue\"\n    addToQueueButton.classList.add('card-buton-change')\n  }\n  if (addToQueueButton.textContent == \"Add to queue\") {\n    addToQueueButton.textContent = \"Added to Queue\"\n    addToQueueButton.classList.add('card-buton-change')\n  }\n});\n\naddToWatchedButton.addEventListener('click', () => {\n  if (addToWatchedButton.textContent == \"Remove from watched\") {\n    addToWatchedButton.textContent = \"Removed from watched\"\n    addToWatchedButton.classList.add('card-buton-change')\n    \n  }\n  if (addToWatchedButton.textContent == \"Add to watched\") {\n    addToWatchedButton.textContent = \"Added to Watched\"\n    addToWatchedButton.classList.add('card-buton-change')\n  }\n});"],"names":["$diLRM","parcelRequire","async","$b6d92f438973dbcb$export$b3306cf7e559bc14","id","movieObj","getMovies","console","log","data","error","$8532299c9a64f3d8$var$openModalCard","document","querySelector","$8532299c9a64f3d8$var$closeModalCard","$8532299c9a64f3d8$var$modalCardCont","$8532299c9a64f3d8$var$backdrop","$8532299c9a64f3d8$var$cardContMarking","$8532299c9a64f3d8$var$cardTableContainer","$8532299c9a64f3d8$var$addToWatchedButton","$8532299c9a64f3d8$var$addToQueueButton","addEventListener","event","target","classList","contains","filmID","attributes","value","remove","then","res","filmObject","movie","key","lockalStorageId","JSON","parse","localStorage","getItem","includesMovie","find","elem","localStorageArr","updatedArr","filter","setItem","stringify","$9Q9V4","getWatchedMoviesInStorage","$8532299c9a64f3d8$var$removeMovieFromWatched","textContent","parsedArr","includes","push","$8532299c9a64f3d8$export$32d5ae83b7163fdd","$8532299c9a64f3d8$var$checkMovieByIdWatched","getQueueMoviesInStorage","$8532299c9a64f3d8$var$removeMovieFromQueue","localStorageArrq","parsedArrq","$8532299c9a64f3d8$export$39d4af248a09546d","$8532299c9a64f3d8$var$checkMovieByIdQueue","markUPImg","poster_path","title","insertAdjacentHTML","trimMarkupVote","$8532299c9a64f3d8$var$trimMarkup","vote_average","trimMarkupPopular","popularity","markUp","vote_count","genre","overview","$8532299c9a64f3d8$var$cardMarkUp","getElementsByTagName","add","$8532299c9a64f3d8$var$onCloseModalCard","evt","window","innerHTML","trim","toFixed"],"version":3,"file":"library.b7b02c4b.js.map"}