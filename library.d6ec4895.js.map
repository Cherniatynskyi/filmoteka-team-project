{"mappings":"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","sources":["src/services/MovieObjectByID.js","src/services/modalTemplate.js"],"sourcesContent":["import { getMovies } from \"./getMovies\";\n\nexport async function getMovieByID(id) {\n    const nul = null;\n    try {\n        const movieObj = await getMovies(`/movie/${id}`, nul, 1)\n        console.log(movieObj.data); //прилітає об'єкт з детальною інформацією\n        return movieObj.data\n    } catch (error) {\n        console.error(error);\n    }\n}\n\n//!!!!!!! функція не підключена до index.html\n// console.log(getMovieByID(990691));\n\n\n//id-шники для прикладу\n// 990691\n// 718789\n// 453395","import { getMovieByID } from './MovieObjectByID';\nimport {\n  getWatchedMoviesInStorage,\n  getQueueMoviesInStorage,\n} from './myLibraryPage';\n\nconst openModalCard = document.querySelector('[data-modalCard-open]');\nconst closeModalCard = document.querySelector('[data-modalCard-close]');\nconst modalCardCont = document.querySelector('[data-modalCard]');\nconst backdrop = document.querySelector('[backdrop]');\nconst cardContMarking = document.querySelector('.card__cont-marking');\nconst cardTableContainer = document.querySelector('.card__table');\nconst addToWatchedButton = document.querySelector('[data-add-to-watched]');\nconst addToQueueButton = document.querySelector('[data-add-to-queue]');\n\nopenModalCard.addEventListener('click', onOpenModalCard);\ncloseModalCard.addEventListener('click', onCloseModalCard);\nmodalCardCont.addEventListener('click', onBackModalDropClick);\nwindow.addEventListener('keydown', onEscClick);\n\nconst KEY_WATCHED = 'watched-movies-in-storage';\nconst KEY_QUEUE = 'queue-movies-in-storage';\n\nfunction onCloseModalCard() {\n  modalCardCont.classList.add('no-activ');\n  const htmlEl = document.getElementsByTagName('HTML')[0];\n  htmlEl.classList.remove('no-scroll');\n  cardContMarking.innerHTML = '';\n  cardTableContainer.innerHTML = '';\n}\n\nfunction onBackModalDropClick(evt) {\n  if (!evt.target.classList.contains('card__cont')) {\n    return;\n  }\n  onCloseModalCard();\n}\n\nfunction onEscClick(evt) {\n  if (evt.key === 'Escape') {\n    onCloseModalCard();\n    backdrop.classList.add('is-hidden');\n  }\n}\n\nfunction onOpenModalCard(event) {\n  if (event.target.classList.contains('grid-movie-card')) {\n    const filmID = event.target.attributes.id.value;\n\n    addToQueueButton.classList.remove('card-buton-change')\n    addToWatchedButton.classList.remove('card-buton-change')\n\n    getMovieByID(filmID).then(res => cardMarkUp(res));\n\n    modalCardCont.classList.remove('no-activ');\n    const htmlEl = document.getElementsByTagName('HTML')[0];\n    htmlEl.classList.add('no-scroll');\n  }\n  return;\n}\n\nfunction cardMarkUp(filmObject) {\n  checkMovieByIdWatched(filmObject, KEY_WATCHED);\n  checkMovieByIdQueue(filmObject, KEY_QUEUE);\n  const markUPImg = `<img class=\"card__img\" src=\"http://image.tmdb.org/t/p/w500${filmObject.poster_path}\" alt=\"${filmObject.title}\" />`;\n  cardContMarking.insertAdjacentHTML('afterbegin', markUPImg);\n  const trimMarkupVote = trimMarkup(filmObject.vote_average);\n  const trimMarkupPopular = trimMarkup(filmObject.popularity);\n\n  let markupGenre = filmObject.genres;\n  let cardGenre = markupGenre.map(genr => genr.name);\n\n  const markUp = `<h1 class=\"card__table-heder\">${filmObject.title}</h1>\n      <table class=\"card__table\">\n        <tr class=\"card__table-vote\">\n          <td class=\"card__table-name \">Vote / Votes</td>\n          <td class=\"card__table-value \"><span class=\"average\">${trimMarkupVote}</span> / <span class=\"vote\">${filmObject.vote_count}</span></td>\n        </tr>\n        <tr class=\"card__table-popularity\">\n          <td class=\"card__table-name\">Popularity</td>\n          <td class=\"card__table-value\">${trimMarkupPopular}</td>\n        </tr>\n        <tr class=\"card__table-title\">\n          <td class=\"card__table-name\">Original Title</td>\n          <td class=\"card__table-value\">${filmObject.title}</td>\n        </tr>\n        <tr class=\"card__table-genre\">\n          <td class=\"card__table-name last-child\">Genre</td>\n          <td class=\"card__table-value last-child\">${cardGenre}</td>\n        </tr>\n      </table>\n      <div class=\"card__about\">\n        <h2 class=\"card__about-heder\">About</h2>\n        <p class=\"card__about-text\">${filmObject.overview}</p>\n      </div>`;\n  cardTableContainer.insertAdjacentHTML('afterbegin', markUp);\n}\n\nexport function addWatchedMoviesInStorage(filmObject) {\n  const localStorageArr = localStorage.getItem(KEY_WATCHED) || [];\n  const parsedArr = JSON.parse(localStorage.getItem(KEY_WATCHED)) || [];\n  if (!localStorageArr.includes(filmObject.id)) {\n    parsedArr.push(filmObject);\n    localStorage.setItem(KEY_WATCHED, JSON.stringify(parsedArr));\n  }\n\n  return;\n}\nexport function addQueueMoviesInStorage(filmObject) {\n  const localStorageArrq = localStorage.getItem(KEY_QUEUE) || [];\n  const parsedArrq = JSON.parse(localStorage.getItem(KEY_QUEUE)) || [];\n  console.log(parsedArrq, 'распасеный массив');\n  if (!localStorageArrq.includes(filmObject.id)) {\n    parsedArrq.push(filmObject);\n    localStorage.setItem(KEY_QUEUE, JSON.stringify(parsedArrq));\n  }\n  return;\n}\nfunction trimMarkup(trim) {\n  const trimMarkup = trim.toFixed(1);\n  return trimMarkup;\n}\n\nfunction checkMovieByIdWatched(movie, key) {\n  const lockalStorageId = JSON.parse(localStorage.getItem(key)) || [];\n  console.log(lockalStorageId, 'Просмотренные фильмы');\n  const includesMovie = lockalStorageId.find(elem => elem.id === movie.id);\n  console.log(includesMovie, 'нука');\n  if (!includesMovie) {\n    addToWatchedButton.addEventListener('click', () =>\n      addWatchedMoviesInStorage(movie)\n    );\n    addToWatchedButton.textContent = 'Add to watched';\n  } else if (includesMovie) {\n    addToWatchedButton.addEventListener('click', () =>\n      removeMovieFromWatched(movie, key)\n    );\n    addToWatchedButton.textContent = 'Remove from watched';\n  }\n}\nfunction checkMovieByIdQueue(movie, key) {\n  const lockalStorageId = JSON.parse(localStorage.getItem(key)) || [];\n  console.log(lockalStorageId, 'Просмотренные фильмы');\n  const includesMovie = lockalStorageId.find(elem => elem.id === movie.id);\n\n  if (!includesMovie) {\n    console.log(lockalStorageId.includes(includesMovie));\n    addToQueueButton.addEventListener('click', () =>\n      addQueueMoviesInStorage(movie)\n    );\n    addToQueueButton.textContent = 'Add to queue';\n  } else if (includesMovie) {\n    addToQueueButton.addEventListener('click', () =>\n      removeMovieFromQueue(movie, key)\n    );\n    addToQueueButton.textContent = 'Remove from queue';\n  }\n}\n\nfunction removeMovieFromWatched(movie) {\n  const localStorageArr = JSON.parse(localStorage.getItem(KEY_WATCHED));\n  const includesMovie = localStorageArr.find(elem => elem.id === movie.id);\n  if (includesMovie) {\n    const updatedArr = localStorageArr.filter(elem => elem.id !== movie.id);\n    localStorage.setItem(KEY_WATCHED, JSON.stringify(updatedArr));\n  }\n\n  getWatchedMoviesInStorage();\n}\n\nfunction removeMovieFromQueue(movie) {\n  const localStorageArr = JSON.parse(localStorage.getItem(KEY_QUEUE));\n  const includesMovie = localStorageArr.find(elem => elem.id === movie.id);\n  if (includesMovie) {\n    const updatedArr = localStorageArr.filter(elem => elem.id !== movie.id);\n    localStorage.setItem(KEY_QUEUE, JSON.stringify(updatedArr));\n  }\n\n  getQueueMoviesInStorage();\n}\n\n\n// Dynamic changing text-content on modal buttons \n\naddToQueueButton.addEventListener('click', () => {\n  if (addToQueueButton.textContent == \"Remove from queue\") {\n    addToQueueButton.textContent = \"Removed from Queue\"\n    addToQueueButton.classList.add('card-buton-change')\n  }\n  if (addToQueueButton.textContent == \"Add to queue\") {\n    addToQueueButton.textContent = \"Added to Queue\"\n    addToQueueButton.classList.add('card-buton-change')\n  }\n});\n\naddToWatchedButton.addEventListener('click', () => {\n  if (addToWatchedButton.textContent == \"Remove from watched\") {\n    addToWatchedButton.textContent = \"Removed from watched\"\n    addToWatchedButton.classList.add('card-buton-change')\n    \n  }\n  if (addToWatchedButton.textContent == \"Add to watched\") {\n    addToWatchedButton.textContent = \"Added to Watched\"\n    addToWatchedButton.classList.add('card-buton-change')\n  }\n});"],"names":["$7pbsT","parcelRequire","$484f9a41a2f33c34$export$b3306cf7e559bc14","id","$484f9a41a2f33c34$var$_getMovieByID","apply","this","arguments","default","$parcel$interopDefault","$2TvXO","mark","_callee","movieObj","$gEIo3","getMovies","concat","_ctx","sent","console","log","data","error","t0","$1f7cb0515f52d0e3$var$openModalCard","document","querySelector","$1f7cb0515f52d0e3$var$closeModalCard","$1f7cb0515f52d0e3$var$modalCardCont","$1f7cb0515f52d0e3$var$backdrop","$1f7cb0515f52d0e3$var$cardContMarking","$1f7cb0515f52d0e3$var$cardTableContainer","$1f7cb0515f52d0e3$var$addToWatchedButton","$1f7cb0515f52d0e3$var$addToQueueButton","addEventListener","event","target","classList","contains","filmID","attributes","value","remove","then","res","filmObject","movie","key","lockalStorageId","JSON","parse","localStorage","getItem","includesMovie","find","elem","localStorageArr","$1f7cb0515f52d0e3$var$KEY_WATCHED","updatedArr","filter","setItem","stringify","$9KRxl","getWatchedMoviesInStorage","$1f7cb0515f52d0e3$var$removeMovieFromWatched","textContent","parsedArr","includes","push","$1f7cb0515f52d0e3$export$32d5ae83b7163fdd","$1f7cb0515f52d0e3$var$checkMovieByIdWatched","$1f7cb0515f52d0e3$var$KEY_QUEUE","getQueueMoviesInStorage","$1f7cb0515f52d0e3$var$removeMovieFromQueue","localStorageArrq","parsedArrq","$1f7cb0515f52d0e3$export$39d4af248a09546d","$1f7cb0515f52d0e3$var$checkMovieByIdQueue","markUPImg","poster_path","title","insertAdjacentHTML","trimMarkupVote","$1f7cb0515f52d0e3$var$trimMarkup","vote_average","trimMarkupPopular","popularity","cardGenre","genres","map","genr","name","markUp","vote_count","overview","$1f7cb0515f52d0e3$var$cardMarkUp","getElementsByTagName","add","$1f7cb0515f52d0e3$var$onCloseModalCard","evt","window","innerHTML","trim","toFixed"],"version":3,"file":"library.d6ec4895.js.map"}