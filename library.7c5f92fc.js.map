{"mappings":"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","sources":["src/services/MovieObjectByID.js","src/services/modalTemplate.js"],"sourcesContent":["import { getMovies } from \"./getMovies\";\n\nexport async function getMovieByID(id) {\n    const nul = null;\n    try {\n        const movieObj = await getMovies(`/movie/${id}`, nul, 1)\n        return movieObj.data\n    } catch (error) {\n        console.error(error);\n    }\n}\n\n//!!!!!!! функція не підключена до index.html\n// console.log(getMovieByID(990691));\n\n\n//id-шники для прикладу\n// 990691\n// 718789\n// 453395","import { getMovieByID } from './MovieObjectByID';\nimport { getWatchedMoviesInStorage, getQueueMoviesInStorage } from './myLibraryPage';\n\nconst openModalCard = document.querySelector('[data-modalCard-open]');\nconst closeModalCard = document.querySelector('[data-modalCard-close]');\nconst modalCardCont = document.querySelector('[data-modalCard]');\nconst backdrop = document.querySelector('[backdrop]');\nconst cardContMarking = document.querySelector('.card__cont-marking');\nconst cardTableContainer = document.querySelector('.card__table');\n\nopenModalCard.addEventListener('click', onOpenModalCard);\ncloseModalCard.addEventListener('click', onCloseModalCard);\nmodalCardCont.addEventListener('click', onBackModalDropClick);\nwindow.addEventListener('keydown', onEscClick);\n\nlet currentMovie = null;\n\nfunction onCloseModalCard() {\n  modalCardCont.classList.add('no-activ');\n  const htmlEl = document.getElementsByTagName('HTML')[0];\n  htmlEl.classList.remove('no-scroll');\n  cardContMarking.innerHTML = '';\n  cardTableContainer.innerHTML = '';\n}\n\nfunction onBackModalDropClick(evt) {\n  if (!evt.target.classList.contains('card__cont')) {\n    return;\n  }\n  onCloseModalCard();\n}\n\nfunction onEscClick(evt) {\n  if (evt.key === 'Escape') {\n    onCloseModalCard();\n    backdrop.classList.add('is-hidden');\n  }\n}\n\nfunction onOpenModalCard(event) {\n  if (event.target.classList.contains('grid-movie-card')) {\n    const filmID = event.target.attributes.id.value;\n\n    getMovieByID(filmID).then(res => cardMarkUp(res));\n\n    modalCardCont.classList.remove('no-activ');\n    const htmlEl = document.getElementsByTagName('HTML')[0];\n    htmlEl.classList.add('no-scroll');\n  }\n  return;\n}\n\nfunction cardMarkUp(filmObject) {\n\n  let markUPImg = `<img class=\"card__img\" src=\"http://image.tmdb.org/t/p/w500${filmObject.poster_path}\" alt=\"${filmObject.title}\" />`;\n  // if (filmObject.poster_path) {\n  //   markUPImg = `<img class=\"card__img\" src=\"http://image.tmdb.org/t/p/w500${filmObject.poster_path}\" alt=\"${filmObject.title}\" />`;\n  // } else {\n  //   markUPImg = `<img class=\"card__img\" src=\"./img/placeholder.jpeg\" alt=\"${filmObject.title}\" />`;\n  // }\n\n  currentMovie = filmObject;\n  cardContMarking.insertAdjacentHTML('afterbegin', markUPImg);\n\n  const trimMarkupVote = trimMarkup(filmObject.vote_average);\n  const trimMarkupPopular = trimMarkup(filmObject.popularity);\n\n  let markupGenre = filmObject.genres;\n  let cardGenre\n  if (!filmObject.genres.length === 0) {\n    cardGenre = markupGenre.map(genr => genr.name);\n  } else {\n    cardGenre = \"No information\"\n  }\n\n  // cardGenre: markupGenre.length > 0 ? cardGenre.join(', ') : 'Unknown';\n\n  const markUp = `<h1 class=\"card__table-heder\">${filmObject.title}</h1>\n      <table class=\"card__table\">\n        <tr class=\"card__table-vote\">\n          <td class=\"card__table-name \">Vote / Votes</td>\n          <td class=\"card__table-value \"><span class=\"average\">${trimMarkupVote}</span> / <span class=\"vote\">${filmObject.vote_count}</span></td>\n        </tr>\n        <tr class=\"card__table-popularity\">\n          <td class=\"card__table-name\">Popularity</td>\n          <td class=\"card__table-value\">${trimMarkupPopular}</td>\n        </tr>\n        <tr class=\"card__table-title\">\n          <td class=\"card__table-name\">Original Title</td>\n          <td class=\"card__table-value\">${filmObject.title}</td>\n        </tr>\n        <tr class=\"card__table-genre\">\n          <td class=\"card__table-name last-child\">Genre</td>\n          <td class=\"card__table-value last-child\">${cardGenre}</td>\n        </tr>\n      </table>\n      <div class=\"card__about\">\n        <h2 class=\"card__about-heder\">About</h2>\n        <p class=\"card__about-text\">${filmObject.overview}</p>\n      </div>`;\n  cardTableContainer.insertAdjacentHTML('afterbegin', markUp);\n  const addToLSButtons = document.querySelectorAll('[data-add-to]');\n\n  const watchedMovie = JSON.parse(localStorage.getItem('watched'));\n  const queueMovie = JSON.parse(localStorage.getItem('queue'));\n\n  if (watchedMovie) {\n    if (watchedMovie.find(item => item.id === filmObject.id)) {\n      addToLSButtons[0].textContent = 'Remove from watched';\n      addToLSButtons[0].classList.remove('add');\n    } else {\n      addToLSButtons[0].textContent = 'Add to watched';\n      addToLSButtons[0].classList.add('add');\n    }\n  }\n\n  if (queueMovie) {\n    if (queueMovie.find(item => item.id === filmObject.id)) {\n      addToLSButtons[1].textContent = 'Remove from queue';\n      addToLSButtons[1].classList.remove('add');\n    } else {\n      addToLSButtons[1].textContent = 'Add to queue';\n      addToLSButtons[1].classList.add('add');\n    }\n  }\n\n  addToLSButtons.forEach(btn => btn.addEventListener('click', onModalBtnClick));\n}\n\nfunction onModalBtnClick(e) {\n  const { addTo } = e.currentTarget.dataset;\n\n  const activeBtn = document.querySelector(`.modal-${addTo}`);\n  \n  if (activeBtn.classList.contains('add')) {\n    addMoviesToStorage(addTo, currentMovie);\n    toggleBtn(addTo);\n  } else {\n    removeMovieFromWatched(addTo, currentMovie);\n    toggleBtn(addTo);\n  }\n  addTo === 'watched' ? getWatchedMoviesInStorage() : getQueueMoviesInStorage();\n  checkPlace(activeBtn);\n}\n\nfunction checkPlace(btn) {\n  return (\n    btn.classList.contains('is-active')\n  );\n}\n\nfunction toggleBtn(key) {\n  const classActive = 'modal__btn--active';\n  const btn = document.querySelector(`.modal-${key}`);\n\n  if (!btn.classList.contains('add')) {\n    btn.classList.remove(classActive);\n    btn.classList.add('add');\n    btn.textContent = 'Add to ' + key;\n    return;\n  }\n\n  btn.classList.add(classActive);\n  btn.classList.remove('add');\n  btn.textContent = 'Remove from ' + key;\n}\n\nfunction addMoviesToStorage(key, movie) {\n  const watchedMovieInStorage = localStorage.getItem(key);\n  if (!watchedMovieInStorage) {\n    localStorage.setItem(key, JSON.stringify([movie]));\n    return;\n  }\n  let watchedMovies = JSON.parse(watchedMovieInStorage);\n  const watchedMoviesInStorageArr = watchedMovies.find(\n    item => item.id === movie.id\n\n  );\n  if (watchedMoviesInStorageArr) {\n    localStorage.setItem(key, JSON.stringify(watchedMovies));\n  } else {\n    watchedMovies.push(movie);\n    localStorage.setItem(key, JSON.stringify(watchedMovies));\n  }\n  \n}\n\n\nfunction removeMovieFromWatched(key, movie) {\n  const localStorageArr = JSON.parse(localStorage.getItem(key));\n  const includesMovie = localStorageArr.find(elem => elem.id === movie.id);\n  if (includesMovie) {\n    const updatedArr = localStorageArr.filter(elem => elem.id !== movie.id);\n    localStorage.setItem(key, JSON.stringify(updatedArr));\n  }\n}\n\nfunction trimMarkup(trim) {\n  const trimMarkup = trim.toFixed(1);\n  return trimMarkup;\n}\n"],"names":["$7pbsT","parcelRequire","$484f9a41a2f33c34$export$b3306cf7e559bc14","id","$484f9a41a2f33c34$var$_getMovieByID","apply","this","arguments","default","$parcel$interopDefault","$2TvXO","mark","_callee","movieObj","$gEIo3","getMovies","concat","_ctx","sent","data","console","error","t0","$1f7cb0515f52d0e3$var$openModalCard","document","querySelector","$1f7cb0515f52d0e3$var$closeModalCard","$1f7cb0515f52d0e3$var$modalCardCont","$1f7cb0515f52d0e3$var$backdrop","$1f7cb0515f52d0e3$var$cardContMarking","$1f7cb0515f52d0e3$var$cardTableContainer","addEventListener","event","target","classList","contains","attributes","value","then","res","filmObject","markUPImg","poster_path","title","$1f7cb0515f52d0e3$var$currentMovie","insertAdjacentHTML","cardGenre","trimMarkupVote","$1f7cb0515f52d0e3$var$trimMarkup","vote_average","trimMarkupPopular","popularity","genres","length","markUp","vote_count","overview","addToLSButtons","querySelectorAll","watchedMovie","JSON","parse","localStorage","getItem","queueMovie","find","item","textContent","remove","add","forEach","btn","$1f7cb0515f52d0e3$var$onModalBtnClick","$1f7cb0515f52d0e3$var$cardMarkUp","getElementsByTagName","$1f7cb0515f52d0e3$var$onCloseModalCard","evt","window","key","innerHTML","e","addTo","currentTarget","dataset","activeBtn","movie","watchedMovieInStorage","setItem","stringify","watchedMovies","push","$1f7cb0515f52d0e3$var$addMoviesToStorage","$1f7cb0515f52d0e3$var$toggleBtn","localStorageArr","elem","updatedArr","filter","$1f7cb0515f52d0e3$var$removeMovieFromWatched","$9KRxl","getWatchedMoviesInStorage","getQueueMoviesInStorage","classActive","trim","toFixed"],"version":3,"file":"library.7c5f92fc.js.map"}