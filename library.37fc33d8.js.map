{"mappings":"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","sources":["src/services/MovieObjectByID.js","src/services/modalTemplate.js"],"sourcesContent":["import { getMoviesOnSearch } from \"./getMovies\";\n\nexport async function getMovieByID(id) {\n    const nul = null;\n    try {\n        const movieObj = await getMoviesOnSearch(`/movie/${id}`, nul, 1)\n        return movieObj.data\n    } catch (error) {\n        console.error(error);\n    }\n}\n\n//!!!!!!! функція не підключена до index.html\n// console.log(getMovieByID(990691));\n\n\n//id-шники для прикладу\n// 990691\n// 718789\n// 453395","import { getMovieByID } from './MovieObjectByID';\nimport { getWatchedMoviesInStorage, getQueueMoviesInStorage } from './myLibraryPage';\n\nconst openModalCard = document.querySelector('[data-modalCard-open]');\nconst closeModalCard = document.querySelector('[data-modalCard-close]');\nconst modalCardCont = document.querySelector('[data-modalCard]');\nconst backdrop = document.querySelector('[backdrop]');\nconst cardContMarking = document.querySelector('.card__cont-marking');\nconst cardTableContainer = document.querySelector('.card__table');\nconst btnWrapper = document.querySelector(\".card__button\")\n\nopenModalCard.addEventListener('click', onOpenModalCard);\ncloseModalCard.addEventListener('click', onCloseModalCard);\nmodalCardCont.addEventListener('click', onBackModalDropClick);\nwindow.addEventListener('keydown', onEscClick);\n\nlet currentMovie = null;\n\nfunction onCloseModalCard() {\n  modalCardCont.classList.add('no-activ');\n  btnWrapper.classList.remove(\"visually-hidden\");\n\n  const htmlEl = document.getElementsByTagName('HTML')[0];\n  htmlEl.classList.remove('no-scroll');\n  cardContMarking.innerHTML = '';\n  cardTableContainer.innerHTML = '';\n}\n\nfunction onBackModalDropClick(evt) {\n  if (!evt.target.classList.contains('card__cont')) {\n    return;\n  }\n  onCloseModalCard();\n}\n\nfunction onEscClick(evt) {\n  if (evt.key === 'Escape') {\n    onCloseModalCard();\n    backdrop.classList.add('is-hidden');\n  }\n}\n\nfunction onOpenModalCard(event) {\n  if (event.target.classList.contains('grid-movie-card')) {\n\n    const filmID = event.target.attributes.id.value;\n    modalCardCont.classList.remove('no-activ');\n    const htmlEl = document.getElementsByTagName('HTML')[0];\n    htmlEl.classList.add('no-scroll');\n    getMovieByID(filmID).then(res => cardMarkUp(res)).catch(error => { markupError() });\n\n    // modalCardCont.classList.remove('no-activ');\n    // const htmlEl = document.getElementsByTagName('HTML')[0];\n    // htmlEl.classList.add('no-scroll');\n  }\n  return;\n}\n\nfunction markupError() {\n  const markup = `<div class=\"no-film-placeholder\">\n        <p>Unfortunatuly, there are no information about this film.</p>\n        <p>Please, choose other!</p>\n      </div>`\n  cardContMarking.insertAdjacentHTML('afterbegin', markup);\n  btnWrapper.classList.add(\"visually-hidden\");\n}\n\nfunction cardMarkUp(filmObject) {\n\n  let markUPImg = `<img class=\"card__img\" src=\"http://image.tmdb.org/t/p/w342${filmObject.poster_path}\" alt=\"${filmObject.title}\" />`;\n  // if (filmObject.poster_path) {\n  //   markUPImg = `<img class=\"card__img\" src=\"http://image.tmdb.org/t/p/w500${filmObject.poster_path}\" alt=\"${filmObject.title}\" />`;\n  // } else {\n  //   markUPImg = `<img class=\"card__img\" src=\"./img/placeholder.jpeg\" alt=\"${filmObject.title}\" />`;\n  // }\n\n  currentMovie = filmObject;\n  cardContMarking.insertAdjacentHTML('afterbegin', markUPImg);\n\n  const trimMarkupVote = trimMarkup(filmObject.vote_average);\n  const trimMarkupPopular = trimMarkup(filmObject.popularity);\n\n  let markupGenre = filmObject.genres;\n  let cardGenre\n  if (filmObject.genres.length > 0) {\n    cardGenre = markupGenre.map(genr => genr.name);\n  } else {\n    cardGenre = \"No information\"\n  }\n\n  // cardGenre: markupGenre.length > 0 ? cardGenre.join(', ') : 'Unknown';\n\n  const markUp = `<h1 class=\"card__table-heder\">${filmObject.title}</h1>\n      <table class=\"card__table\">\n        <tr class=\"card__table-vote\">\n          <td class=\"card__table-name \">Vote / Votes</td>\n          <td class=\"card__table-value \"><span class=\"average\">${trimMarkupVote}</span> / <span class=\"vote\">${filmObject.vote_count}</span></td>\n        </tr>\n        <tr class=\"card__table-popularity\">\n          <td class=\"card__table-name\">Popularity</td>\n          <td class=\"card__table-value\">${trimMarkupPopular}</td>\n        </tr>\n        <tr class=\"card__table-title\">\n          <td class=\"card__table-name\">Original Title</td>\n          <td class=\"card__table-value\">${filmObject.title}</td>\n        </tr>\n        <tr class=\"card__table-genre\">\n          <td class=\"card__table-name last-child\">Genre</td>\n          <td class=\"card__table-value last-child\">${cardGenre}</td>\n        </tr>\n      </table>\n      <div class=\"card__about\">\n        <h2 class=\"card__about-heder\">About</h2>\n        <p class=\"card__about-text\">${filmObject.overview}</p>\n      </div>`;\n  cardTableContainer.insertAdjacentHTML('afterbegin', markUp);\n  const addToLSButtons = document.querySelectorAll('[data-add-to]');\n\n  const watchedMovie = JSON.parse(localStorage.getItem('watched'));\n  const queueMovie = JSON.parse(localStorage.getItem('queue'));\n\n  if (watchedMovie) {\n    if (watchedMovie.find(item => item.id === filmObject.id)) {\n      addToLSButtons[0].textContent = 'Remove from watched';\n      addToLSButtons[0].classList.remove('add');\n    } else {\n      addToLSButtons[0].textContent = 'Add to watched';\n      addToLSButtons[0].classList.add('add');\n    }\n  }\n\n  if (queueMovie) {\n    if (queueMovie.find(item => item.id === filmObject.id)) {\n      addToLSButtons[1].textContent = 'Remove from queue';\n      addToLSButtons[1].classList.remove('add');\n    } else {\n      addToLSButtons[1].textContent = 'Add to queue';\n      addToLSButtons[1].classList.add('add');\n    }\n  }\n\n  addToLSButtons.forEach(btn => btn.addEventListener('click', onModalBtnClick));\n}\n\nfunction onModalBtnClick(e) {\n  const { addTo } = e.currentTarget.dataset;\n\n  const activeBtn = document.querySelector(`.modal-${addTo}`);\n  \n  if (activeBtn.classList.contains('add')) {\n    addMoviesToStorage(addTo, currentMovie);\n    toggleBtn(addTo);\n  } else {\n    removeMovieFromWatched(addTo, currentMovie);\n    toggleBtn(addTo);\n  }\n  addTo === 'watched' ? getWatchedMoviesInStorage() : getQueueMoviesInStorage();\n  checkPlace(activeBtn);\n}\n\nfunction checkPlace(btn) {\n  return (\n    btn.classList.contains('is-active')\n  );\n}\n\nfunction toggleBtn(key) {\n  const classActive = 'modal__btn--active';\n  const btn = document.querySelector(`.modal-${key}`);\n\n  if (!btn.classList.contains('add')) {\n    btn.classList.remove(classActive);\n    btn.classList.add('add');\n    btn.textContent = 'Add to ' + key;\n    return;\n  }\n\n  btn.classList.add(classActive);\n  btn.classList.remove('add');\n  btn.textContent = 'Remove from ' + key;\n}\n\nfunction addMoviesToStorage(key, movie) {\n  const watchedMovieInStorage = localStorage.getItem(key);\n  if (!watchedMovieInStorage) {\n    localStorage.setItem(key, JSON.stringify([movie]));\n    return;\n  }\n  let watchedMovies = JSON.parse(watchedMovieInStorage);\n  const watchedMoviesInStorageArr = watchedMovies.find(\n    item => item.id === movie.id\n\n  );\n  if (watchedMoviesInStorageArr) {\n    localStorage.setItem(key, JSON.stringify(watchedMovies));\n  } else {\n    watchedMovies.push(movie);\n    localStorage.setItem(key, JSON.stringify(watchedMovies));\n  }\n  \n}\n\n\nfunction removeMovieFromWatched(key, movie) {\n  const localStorageArr = JSON.parse(localStorage.getItem(key));\n  const includesMovie = localStorageArr.find(elem => elem.id === movie.id);\n  if (includesMovie) {\n    const updatedArr = localStorageArr.filter(elem => elem.id !== movie.id);\n    localStorage.setItem(key, JSON.stringify(updatedArr));\n  }\n}\n\nfunction trimMarkup(trim) {\n  const trimMarkup = trim.toFixed(1);\n  return trimMarkup;\n}\n"],"names":["$diLRM","parcelRequire","async","$b6d92f438973dbcb$export$b3306cf7e559bc14","id","getMoviesOnSearch","data","error","console","$8532299c9a64f3d8$var$openModalCard","document","querySelector","$8532299c9a64f3d8$var$closeModalCard","$8532299c9a64f3d8$var$modalCardCont","$8532299c9a64f3d8$var$backdrop","$8532299c9a64f3d8$var$cardContMarking","$8532299c9a64f3d8$var$cardTableContainer","$8532299c9a64f3d8$var$btnWrapper","addEventListener","event","target","classList","contains","filmID","attributes","value","remove","getElementsByTagName","add","then","res","filmObject","markUPImg","poster_path","title","$8532299c9a64f3d8$var$currentMovie","insertAdjacentHTML","trimMarkupVote","$8532299c9a64f3d8$var$trimMarkup","vote_average","trimMarkupPopular","popularity","cardGenre","markupGenre","genres","length","map","genr","name","markUp","vote_count","overview","addToLSButtons","querySelectorAll","watchedMovie","JSON","parse","localStorage","getItem","queueMovie","find","item","textContent","forEach","btn","$8532299c9a64f3d8$var$onModalBtnClick","$8532299c9a64f3d8$var$cardMarkUp","catch","markup","$8532299c9a64f3d8$var$markupError","$8532299c9a64f3d8$var$onCloseModalCard","evt","window","key","innerHTML","e","addTo","currentTarget","dataset","activeBtn","movie","watchedMovieInStorage","setItem","stringify","watchedMovies","push","$8532299c9a64f3d8$var$addMoviesToStorage","$8532299c9a64f3d8$var$toggleBtn","localStorageArr","elem","updatedArr","filter","$8532299c9a64f3d8$var$removeMovieFromWatched","$9Q9V4","getWatchedMoviesInStorage","getQueueMoviesInStorage","classActive","trim","toFixed"],"version":3,"file":"library.37fc33d8.js.map"}