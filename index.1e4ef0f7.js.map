{"mappings":"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","sources":["src/services/trendingPage.js","src/services/addFindMovieInStorage.js","src/services/findMovies.js"],"sourcesContent":["import { getMovies } from './getMovies';\nimport { addMoviesInStorage } from './addFindMovieInStorage';\nimport { checkAndMarkup, cardMarkup } from './findMovies';\n\ngetMovies('genre/movie/list', null, 1).then(response => {\n  localStorage.setItem('genres', JSON.stringify(response.data.genres));\n});\n\nconst getAllGenres = localStorage.getItem('genres');\nconst allGenras = JSON.parse(getAllGenres);\nconst nul = null;\n\nconst trendingMoviesContainer = document.querySelector('.movie-grid-list');\n\nasync function getTrending() {\n  const trendingArray = await getMovies('trending/movie/day', nul, 1);\n\n  const trendingLog = trendingArray.data.results;\n  addMoviesInStorage(trendingLog);\n  renderTrendingMovies(trendingLog);\n\n  backButton.addEventListener('click', paginationNavigation1);\n  nextButton.addEventListener('click', paginationNavigation1);\n\n  // backButton.removeEventListener('click', paginationNavigation)\n  // nextButton.removeEventListener('click', paginationNavigation);\n}\n\nfunction createTrendingCard(moviesArray) {\n  const properDate = makeMovieDate(moviesArray.release_date);\n  const properTitle = makeMovieTitle(moviesArray);\n  let properGenre = getProperGenre(moviesArray.genre_ids);\n  if (!properGenre) {\n    properGenre = 'No info';\n  }\n  if (moviesArray.poster_path) {\n    return `<li class=\"grid-movie-card\"  id=\"${moviesArray.id}\">\n      <div class=\"movie-item \">\n      <div class=\"img-wrapper\">\n        <img\n          class=\"movie-img\"\n          src=\"https://image.tmdb.org/t/p/w500${moviesArray.poster_path}\"\n          alt=\"${properTitle}\"\n          loading=\"lazy\"\n        />\n        </div>\n        <div class=\"movie-info-wrapper\">\n          <div class=\"movie-info data-open\">\n            <h3 class=\"movie-title\">${properTitle}</h3>\n            <ul class=\"thumb\">\n              <li class=\"movie-genre\">${properGenre}</li>\n              <li class=\"movie-date\">| ${properDate}</li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </li>`;\n  } else {\n    return `<li class=\"grid-movie-card\"  id=\"${moviesArray.id}\">\n      <div class=\"movie-item \">\n      <div class=\"img-wrapper img-placeholder\">\n        </div>\n        <div class=\"movie-info-wrapper\">\n          <div class=\"movie-info data-open\">\n            <h3 class=\"movie-title\">${properTitle}</h3>\n            <ul class=\"thumb\">\n              <li class=\"movie-genre\">${properGenre}</li>\n              <li class=\"movie-date\">| ${properDate}</li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </li>`;\n  }\n}\n\nfunction generateTrendingMoveisMarkup(trendingArray) {\n  return trendingArray.reduce(\n    (acc, movie) => acc + createTrendingCard(movie),\n    ''\n  );\n}\n\nexport function renderTrendingMovies(trendingArray) {\n  const trendingMovies = generateTrendingMoveisMarkup(trendingArray);\n  // trendingMoviesContainer.insertAdjacentHTML('beforeend', trendingMovies);\n  trendingMoviesContainer.innerHTML = trendingMovies;\n}\n\nfunction makeMovieDate(date) {\n  const fitDate = date.slice(0, 4);\n  return fitDate;\n}\n\nexport function makeMovieTitle(trendingMovie) {\n  if (trendingMovie.hasOwnProperty('title')) {\n    return trendingMovie.title;\n  }\n  return trendingMovie.name;\n}\n\nexport function getProperGenre(idArray) {\n  const correctGenres = [];\n  for (let i = 0; i < idArray.length; i += 1) {\n    allGenras.forEach(genre => {\n      if (genre.id === idArray[i]) {\n        correctGenres.push(genre.name);\n      }\n    });\n  }\n  if (correctGenres.length >= 2) {\n    return correctGenres.slice(0, 2).join() + ', Other...';\n  }\n  return correctGenres.join();\n}\n\ngetTrending();\n\nconst backButton = document.querySelector('#backButton');\nbackButton.classList.add('hide');\nconst nextButton = document.querySelector('#nextButton');\nlet paginationPageNumber = document.querySelector('#paginationPageNumber');\n\nlet page = 1;\n\nexport function paginationNavigation1(e) {\n  page === 1 || page < 1\n    ? backButton.classList.add('hide')\n    : backButton.classList.remove('hide');\n  if (e.target.id === 'backButton') {\n    page = page - 1;\n    paginationPageNumber.textContent = page;\n    startPaginationTranding(page);\n  } else {\n    page = page + 1;\n    paginationPageNumber.textContent = page;\n    startPaginationTranding(page);\n  }\n  page === 1 || page < 1\n    ? backButton.classList.add('hide')\n    : backButton.classList.remove('hide');\n}\n\nasync function startPaginationTranding(page) {\n  try {\n    const responseArr = await getMovies('trending/movie/day', nul, page);\n    renderTrendingMovies(responseArr.data.results);\n  } catch (error) {\n    console.error(error);\n  }\n}\n","const KEY = \"movies-in-storage\";\n\nexport function addMoviesInStorage(moviesArray) {\n    localStorage.setItem(KEY, JSON.stringify(moviesArray))\n}\n\n","const axios = require('axios').default;\nimport { getMovies, API_URL, API_KEY } from './getMovies';\nimport {\n  makeMovieTitle,\n  getProperGenre,\n  paginationNavigation1,\n} from './trendingPage';\n\n\nconst moviesListContainer = document.querySelector('.movie-grid-list');\nconst formError = document.querySelector('.form__error');\nconst backButton = document.querySelector('#backButton');\nconst nextButton = document.querySelector('#nextButton');\nconst paginadionThumb = document.querySelector('.paginationsContainer')\nlet paginationPageNumber = document.querySelector('#paginationPageNumber');\n\n\nform.addEventListener('submit', findMovies);\nlet request;\nlet page = 1;\n\nasync function findMovies(e) {\n  page = 1;\n  paginationPageNumber.textContent = `${page}`;\n  backButton.classList.add('hide');\n  e.preventDefault();\n  request = e.target.firstElementChild.value;\n  try {\n    const responseArr = await getMovies('search/movie', request, 1);\n\n    errorIsHidden();\n    checkPages(responseArr);\n    checkAndMarkup(responseArr);\n\n    backButton.removeEventListener('click', paginationNavigation1);\n    nextButton.removeEventListener('click', paginationNavigation1);\n\n    backButton.addEventListener('click', paginationNavigation);\n    nextButton.addEventListener('click', paginationNavigation);\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport function clearGalleryList(response) {\n  if (response.status === 200) {\n    moviesListContainer.innerHTML = '';\n    return;\n  }\n  return 'No films';\n}\n\nexport function checkAndMarkup(responseArr) {\n  if (responseArr.data.results.length === 0) {\n    formError.classList.remove('is-hidden');\n    return;\n  } else {\n    cardMarkup(responseArr.data.results);\n  }\n}\n\nexport function cardMarkup(moviesArr) {\n  const markup = moviesArr\n    .map(item => {\n      const dateMarkup = getYear(item.release_date);\n      const properTitle = makeMovieTitle(item);\n      let properGenre = getProperGenre(item.genre_ids);\n      if (!properGenre) {\n        properGenre = 'No info';\n      }\n      if (item.poster_path) {\n        return `<li class=\"grid-movie-card\" id=\"${item.id}\">\n      <div class=\"movie-item\">\n      <div class=\"img-wrapper\">\n        <img class=\"movie-img\"\n        src=\"http://image.tmdb.org/t/p/w500${item.poster_path}\" \n        alt=\"${item.title}\"\n        loading=\"lazy\" />\n        </div>\n        <div class=\"movie-info-wrapper\">\n          <div class=\"movie-info\">\n            <h3 class=\"movie-title\">${properTitle}</h3>\n            <ul class=\"thumb\">\n              <li class=\"movie-genre\">${properGenre}</li>\n              <li class=\"movie-date\">| ${dateMarkup}</li>\n              <li class=\"movie-rating\">${item.vote_average}</li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </li>`;\n      } else {\n        return `<li class=\"grid-movie-card\" id=\"${item.id}>\n      <div class=\"movie-item\">\n      <div class=\"img-wrapper img-placeholder\">\n        </div>\n        <div class=\"movie-info-wrapper\">\n          <div class=\"movie-info\">\n            <h3 class=\"movie-title\">${properTitle}</h3>\n            <ul class=\"thumb\">\n              <li class=\"movie-genre\">${properGenre}</li>\n              <li class=\"movie-date\">| ${dateMarkup}</li>\n              <li class=\"movie-rating\">${item.vote_average}</li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </li>`;\n      }\n    })\n    .join('');\n  moviesListContainer.innerHTML = markup;\n}\n\nfunction getYear(date) {\n  const dateArr = date.split('-');\n  return dateArr[0];\n}\n\nexport function errorIsHidden() {\n  if (!formError.classList.contains('is-hidden')) {\n    formError.classList.add('is-hidden');\n  }\n  return;\n}\n\nfunction checkPages(arr) {\n  if (arr.data.total_pages < 2) {\n    paginadionThumb.classList.add(\"visually-hidden\")\n  } if (arr.data.total_pages >= 2) {\n    paginadionThumb.classList.remove(\"visually-hidden\")\n  }\n  return\n}\n\n\n////////////////////////////////////////////////////////////////////\n\nbackButton.classList.add('hide');\n\n\nfunction paginationNavigation(e) {\n  page === 1 || page < 1\n    ? backButton.classList.add('hide')\n    : backButton.classList.remove('hide');\n  if (e.target.id === 'backButton') {\n    page = page - 1;\n    paginationPageNumber.textContent = page;\n    startPagination(page);\n  } else {\n    page = page + 1;\n    paginationPageNumber.textContent = page;\n    startPagination(page);\n  }\n  page === 1 || page < 1\n    ? backButton.classList.add('hide')\n    : backButton.classList.remove('hide');\n}\n\nasync function startPagination(page) {\n  try {\n    const responseArr = await getMovies('search/movie', request, page);\n    console.log(responseArr);\n    errorIsHidden();\n    checkAndMarkup(responseArr);\n  } catch (error) {\n    console.error(error);\n  }\n}\n"],"names":["$7pbsT","parcelRequire","$gEIo3","getMovies","then","response","localStorage","setItem","JSON","stringify","data","genres","$5e93339970c2ee18$var$getAllGenres","getItem","$5e93339970c2ee18$var$allGenras","parse","$5e93339970c2ee18$var$nul","$5e93339970c2ee18$var$trendingMoviesContainer","document","querySelector","$5e93339970c2ee18$var$_getTrending","default","$parcel$interopDefault","$2TvXO","mark","_callee","trendingArray","trendingLog","_ctx","sent","results","$1ATxw","addMoviesInStorage","$5e93339970c2ee18$export$ae4a60d31ab53252","$5e93339970c2ee18$var$backButton","addEventListener","$5e93339970c2ee18$export$d4371eb9638d12b2","$5e93339970c2ee18$var$nextButton","apply","this","arguments","$5e93339970c2ee18$var$generateTrendingMoveisMarkup","reduce","acc","movie","properDate","moviesArray","release_date","slice","properTitle","$5e93339970c2ee18$export$e470e9467189ddc7","properGenre","$5e93339970c2ee18$export$6b90e9e6a3a9d62e","genre_ids","poster_path","concat","id","trendingMovies","innerHTML","trendingMovie","hasOwnProperty","title","name","idArray","forEach","genre","i","correctGenres","push","length","_loop","join","$5e93339970c2ee18$var$getTrending","classList","add","$5e93339970c2ee18$var$paginationPageNumber","$5e93339970c2ee18$var$page","e","remove","target","textContent","$5e93339970c2ee18$var$startPaginationTranding","page","$5e93339970c2ee18$var$_startPaginationTranding","console","error","t0","$12943c468fa0ee6b$export$370b2c7367736e44","$efc7e4d7d0ea3671$var$request","$efc7e4d7d0ea3671$var$moviesListContainer","$efc7e4d7d0ea3671$var$formError","$efc7e4d7d0ea3671$var$backButton","$efc7e4d7d0ea3671$var$nextButton","$efc7e4d7d0ea3671$var$paginadionThumb","$efc7e4d7d0ea3671$var$paginationPageNumber","form","$efc7e4d7d0ea3671$var$_findMovies","$efc7e4d7d0ea3671$var$page","responseArr","preventDefault","firstElementChild","value","$efc7e4d7d0ea3671$export$7aa1764d80425345","$efc7e4d7d0ea3671$var$checkPages","$efc7e4d7d0ea3671$export$3565439f0fa482a6","removeEventListener","$87q4y","paginationNavigation1","$efc7e4d7d0ea3671$var$paginationNavigation","moviesArr","markup","map","item","dateMarkup","split","makeMovieTitle","getProperGenre","vote_average","contains","arr","total_pages","$efc7e4d7d0ea3671$var$startPagination","$efc7e4d7d0ea3671$var$_startPagination","log"],"version":3,"file":"index.1e4ef0f7.js.map"}