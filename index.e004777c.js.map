{"mappings":"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","sources":["src/services/trendingPage.js","src/services/genreFilter.js"],"sourcesContent":["import { getMovies, getMoviesOnSearch } from './getMovies';\nimport { addMoviesInStorage } from './addFindMovieInStorage';\n// import { checkAndMarkup, cardMarkup, checkPages, checkLastPage } from './findMovies';\n\ngetMovies('genre/movie/list').then(response => {\n  localStorage.setItem('genres', JSON.stringify(response.data.genres));\n});\n\nconst getAllGenres = localStorage.getItem('genres');\nconst allGenras = JSON.parse(getAllGenres);\nconst nul = null;\n\nconst trendingMoviesContainer = document.querySelector('.movie-grid-list');\nconst formError = document.querySelector('.form__error');\n\nasync function getTrending() {\n  const trendingArray = await getMovies('trending/movie/day');\n  const trendingLog = trendingArray.data.results;\n  renderTrendingMovies(trendingLog);\n  \n  backButton.addEventListener('click', paginationNavigation1);\n  nextButton.addEventListener('click', paginationNavigation1);\n\n  // backButton.removeEventListener('click', paginationNavigation)\n  // nextButton.removeEventListener('click', paginationNavigation);\n}\n\nfunction createTrendingCard(moviesArray) {\n  const properDate = makeMovieDate(moviesArray.release_date);\n  const properTitle = makeMovieTitle(moviesArray);\n  let properGenre = getProperGenre(moviesArray.genre_ids);\n  if (!properGenre) {\n    properGenre = 'No info';\n  }\n  if (moviesArray.poster_path) {\n    return `<li class=\"grid-movie-card\"  id=\"${moviesArray.id}\">\n      <div class=\"movie-item \">\n      <div class=\"img-wrapper\">\n        <img\n          class=\"movie-img\"\n          src=\"https://image.tmdb.org/t/p/w342${moviesArray.poster_path}\"\n          alt=\"${properTitle}\"\n          loading=\"lazy\"\n        />\n        </div>\n        <div class=\"movie-info-wrapper\">\n          <div class=\"movie-info data-open\">\n            <h3 class=\"movie-title\">${properTitle}</h3>\n            <ul class=\"thumb\">\n              <li class=\"movie-genre\">${properGenre}</li>\n              <li class=\"movie-date\">| ${properDate}</li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </li>`;\n  } else {\n    return `<li class=\"grid-movie-card\"  id=\"${moviesArray.id}\">\n      <div class=\"movie-item \">\n      <div class=\"img-wrapper img-placeholder\">\n        </div>\n        <div class=\"movie-info-wrapper\">\n          <div class=\"movie-info data-open\">\n            <h3 class=\"movie-title\">${properTitle}</h3>\n            <ul class=\"thumb\">\n              <li class=\"movie-genre\">${properGenre}</li>\n              <li class=\"movie-date\">| ${properDate}</li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </li>`;\n  }\n}\n\nfunction generateTrendingMoveisMarkup(trendingArray) {\n  return trendingArray.reduce(\n    (acc, movie) => acc + createTrendingCard(movie),\n    ''\n  );\n}\n\nexport function renderTrendingMovies(trendingArray) {\n  const trendingMovies = generateTrendingMoveisMarkup(trendingArray);\n  // trendingMoviesContainer.insertAdjacentHTML('beforeend', trendingMovies);\n  trendingMoviesContainer.innerHTML = trendingMovies;\n}\n\nfunction makeMovieDate(date) {\n  const fitDate = date.slice(0, 4);\n  return fitDate;\n}\n\nexport function makeMovieTitle(trendingMovie) {\n  if (trendingMovie.hasOwnProperty('title')) {\n    return trendingMovie.title;\n  }\n  return trendingMovie.name;\n}\n\nexport function getProperGenre(idArray) {\n  const correctGenres = [];\n  for (let i = 0; i < idArray.length; i += 1) {\n    allGenras.forEach(genre => {\n      if (genre.id === idArray[i]) {\n        correctGenres.push(genre.name);\n      }\n    });\n  }\n  if (correctGenres.length > 2) {\n    return correctGenres.slice(0, 2).join() + ', Other...';\n  }\n  return correctGenres.join();\n}\n\ngetTrending();\n\nconst backButton = document.querySelector('#backButton');\nbackButton.classList.add('hide');\nconst nextButton = document.querySelector('#nextButton');\nlet paginationPageNumber = document.querySelector('#paginationPageNumber');\n\nexport let page = 1;\n\nexport function paginationNavigation1(e) {\n  // debugger\n  page === 1 || page < 1\n    ? backButton.classList.add('hide')\n    : backButton.classList.remove('hide');\n  if (e.target.id === 'backButton') {\n    page = page - 1;\n    paginationPageNumber.textContent = page;\n    startPaginationTranding(page);\n  } else {\n    page = page + 1;\n    paginationPageNumber.textContent = page;\n    startPaginationTranding(page);\n  }\n  page === 1 || page < 1\n    ? backButton.classList.add('hide')\n    : backButton.classList.remove('hide');\n}\n\nasync function startPaginationTranding(page) {\n  // console.log(page);\n  try {\n    if (!formError.classList.contains('is-hidden')) {\n      document.querySelector(\".form__input\").value = \"\";\n      formError.classList.add('is-hidden')\n      \n    }\n    console.log(page);\n    const responseArr = await getMoviesOnSearch('trending/movie/day',null, page);\n    // checkPages(responseArr);\n    renderTrendingMovies(responseArr.data.results);\n    checkLastPage(page)\n  } catch (error) {\n    console.error(error);\n  }\n}\n\n\n/////////////////////////////////////////////////////////\n/////////////////////////////////////////////////////////\nconst moviesListContainer = document.querySelector('.movie-grid-list');\n\n\nform.addEventListener('submit', findMovies);\nlet request;\nlet previousRequest;\nlet totalPages\n\nasync function findMovies(e) {\n  e.preventDefault();\n  request = e.target.firstElementChild.value;\n  try {\n    const responseArr = await getMoviesOnSearch('search/movie', request, 1);\n    totalPages = responseArr.data.total_pages;\n    if (totalPages > 0) {\n      page = 1;\n    } if (page === 1) {\n    backButton.classList.add('hide');\n    }\n\n    paginationPageNumber.textContent = `${page}`;\n    errorIsHidden();\n\n    if (responseArr.data.results.length === 0) {\n    formError.classList.remove('is-hidden');\n    return\n    } else {\n    previousRequest = request;\n    cardMarkup(responseArr.data.results);\n    checkPages(responseArr);\n  }\n\n    backButton.removeEventListener('click', paginationNavigation1);\n    nextButton.removeEventListener('click', paginationNavigation1);\n\n    backButton.addEventListener('click', paginationNavigation);\n    nextButton.addEventListener('click', paginationNavigation);\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport function clearGalleryList(response) {\n  if (response.status === 200) {\n    moviesListContainer.innerHTML = '';\n    return;\n  }\n  return 'No films';\n}\n\nexport function checkAndMarkup(responseArr) {\n  if (responseArr.data.results.length === 0) {\n    formError.classList.remove('is-hidden');\n    return\n  } else {\n    cardMarkup(responseArr.data.results);\n    checkPages(responseArr);\n  }\n}\n\nexport function cardMarkup(moviesArr) {\n  const markup = moviesArr\n    .map(item => {\n      const dateMarkup = getYear(item);\n      const properTitle = makeMovieTitle(item);\n      let properGenre = getProperGenre(item.genre_ids);\n      if (!properGenre) {\n        properGenre = 'No info';\n      }\n      if (item.poster_path) {\n        return `<li class=\"grid-movie-card\" id=\"${item.id}\">\n      <div class=\"movie-item\">\n      <div class=\"img-wrapper\">\n        <img class=\"movie-img\"\n        src=\"http://image.tmdb.org/t/p/w342${item.poster_path}\" \n        alt=\"${item.title}\"\n        loading=\"lazy\" />\n        </div>\n        <div class=\"movie-info-wrapper\">\n          <div class=\"movie-info\">\n            <h3 class=\"movie-title\">${properTitle}</h3>\n            <ul class=\"thumb\">\n              <li class=\"movie-genre\">${properGenre}</li>\n              <li class=\"movie-date\">| ${dateMarkup}</li>\n              <li class=\"movie-rating\">${item.vote_average}</li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </li>`;\n      } else {\n        return `<li class=\"grid-movie-card\" id=\"${item.id}>\n      <div class=\"movie-item\">\n      <div class=\"img-wrapper img-placeholder\">\n        </div>\n        <div class=\"movie-info-wrapper\">\n          <div class=\"movie-info\">\n            <h3 class=\"movie-title\">${properTitle}</h3>\n            <ul class=\"thumb\">\n              <li class=\"movie-genre\">${properGenre}</li>\n              <li class=\"movie-date\">| ${dateMarkup}</li>\n              <li class=\"movie-rating\">${item.vote_average}</li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </li>`;\n      }\n    })\n    .join('');\n  moviesListContainer.innerHTML = markup;\n}\n\nfunction getYear(item) {\n  if (item.hasOwnProperty(\"release_date\")) {\n    const dateArr = item.release_date.split('-');\n    return dateArr[0];\n  }\n  return \"\"\n}\n\nexport function errorIsHidden() {\n  if (!formError.classList.contains('is-hidden')) {\n    formError.classList.add('is-hidden');\n  }\n}\n\nfunction checkPages(arr) {\n  if (arr.data.total_pages < 2) {\n    nextButton.classList.add('hide')\n  } if (arr.data.total_pages >= 2) {\n    nextButton.classList.remove('hide')\n  }\n}\nexport function checkLastPage(page) {\n  if (page === totalPages) {\n    nextButton.classList.add('hide')\n  }\n}\n\n\n////////////////////////////////////////////////////////////////////\n\nbackButton.classList.add('hide');\n\n\nfunction paginationNavigation(e) {\n  console.log(page);\n  page === 1 || page < 1\n    ? backButton.classList.add('hide')\n    : backButton.classList.remove('hide');\n  if (e.target.id === 'backButton') {\n    page = page - 1;\n    paginationPageNumber.textContent = page;\n    startPagination(page);\n  } else {\n    page = page + 1;\n    paginationPageNumber.textContent = page;\n    startPagination(page);\n  }\n  page === 1 || page < 1\n    ? backButton.classList.add('hide')\n    : backButton.classList.remove('hide');\n}\n\nasync function startPagination(page) {\n  try {\n    console.log(request);\n    console.log(previousRequest);\n    if (!formError.classList.contains('is-hidden')) {\n      document.querySelector(\".form__input\").value = \"\";\n    }\n    const responseArr = await getMoviesOnSearch('search/movie', previousRequest, page);\n \n    errorIsHidden();\n    checkPages(responseArr);\n    checkAndMarkup(responseArr);\n    checkLastPage(page)\n  } catch (error) {\n    console.error(error);\n  }\n}","import {renderTrendingMovies} from './trendingPage'\n\nconst API_KEY = 'api_key=144c01915625ec70297b77a615cc2ea7';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_URL = BASE_URL + '/discover/movie?sort_by=popularity.desc&'+API_KEY;\n\n\n\nfunction getMovies(url) {\n    fetch(url).then(res => res.json()).then(data => {\n        renderTrendingMovies(data.results)\n    })\n}\n\n\n\nconst genres = [\n    {\n      \"id\": 28,\n      \"name\": \"Action\"\n    },\n    {\n      \"id\": 12,\n      \"name\": \"Adventure\"\n    },\n    {\n      \"id\": 16,\n      \"name\": \"Animation\"\n    },\n    {\n      \"id\": 35,\n      \"name\": \"Comedy\"\n    },\n    {\n      \"id\": 80,\n      \"name\": \"Crime\"\n    },\n    {\n      \"id\": 99,\n      \"name\": \"Documentary\"\n    },\n    {\n      \"id\": 18,\n      \"name\": \"Drama\"\n    },\n    {\n      \"id\": 10751,\n      \"name\": \"Family\"\n    },\n    {\n      \"id\": 14,\n      \"name\": \"Fantasy\"\n    },\n    {\n      \"id\": 36,\n      \"name\": \"History\"\n    },\n    {\n      \"id\": 27,\n      \"name\": \"Horror\"\n    },\n    {\n      \"id\": 10402,\n      \"name\": \"Music\"\n    },\n    {\n      \"id\": 9648,\n      \"name\": \"Mystery\"\n    },\n    {\n      \"id\": 10749,\n      \"name\": \"Romance\"\n    },\n    {\n      \"id\": 878,\n      \"name\": \"Science Fiction\"\n    },\n    {\n      \"id\": 10770,\n      \"name\": \"TV Movie\"\n    },\n    {\n      \"id\": 53,\n      \"name\": \"Thriller\"\n    },\n    {\n      \"id\": 10752,\n      \"name\": \"War\"\n    },\n    {\n      \"id\": 37,\n      \"name\": \"Western\"\n    }\n]\n\nconst tagsEl = document.getElementById('tags')\nvar selectedGenre = []\n\nsetGenre();\nfunction setGenre() {\n    tagsEl.innerHTML= '';\n    genres.forEach(genre => {\n        const t = document.createElement('div');\n        t.classList.add('tag');\n        t.id=genre.id;\n        t.innerText = genre.name;\n        t.addEventListener('click', () => {\n            t.classList.toggle('highlight')\n            if(selectedGenre.length == 0){\n                selectedGenre.push(genre.id);\n            }else{\n                if(selectedGenre.includes(genre.id)){\n                    selectedGenre.forEach((id, idx) => {\n                        if(id == genre.id){\n                            selectedGenre.splice(idx, 1);\n                        }\n                    })\n                }else{\n                    selectedGenre.push(genre.id);\n                }\n            }\n            getMovies(API_URL + '&with_genres='+encodeURI(selectedGenre.join(',')))\n            // highlightSelection()\n        })\n        tagsEl.append(t);\n    })\n}\n"],"names":["$diLRM","parcelRequire","getMovies","then","response","localStorage","setItem","JSON","stringify","data","genres","$30d4b9c211fa07a1$var$getAllGenres","getItem","$30d4b9c211fa07a1$var$allGenras","parse","$30d4b9c211fa07a1$var$trendingMoviesContainer","document","querySelector","$30d4b9c211fa07a1$var$formError","$30d4b9c211fa07a1$var$generateTrendingMoveisMarkup","trendingArray","reduce","acc","movie","moviesArray","properDate","release_date","slice","properTitle","$30d4b9c211fa07a1$export$e470e9467189ddc7","properGenre","$30d4b9c211fa07a1$export$6b90e9e6a3a9d62e","genre_ids","poster_path","id","$30d4b9c211fa07a1$var$createTrendingCard","$30d4b9c211fa07a1$export$ae4a60d31ab53252","trendingMovies","innerHTML","trendingMovie","hasOwnProperty","title","name","idArray","correctGenres","i","length","forEach","genre","push","join","async","results","$30d4b9c211fa07a1$var$backButton","addEventListener","$30d4b9c211fa07a1$export$d4371eb9638d12b2","$30d4b9c211fa07a1$var$nextButton","$30d4b9c211fa07a1$var$getTrending","classList","add","$30d4b9c211fa07a1$var$paginationPageNumber","$30d4b9c211fa07a1$export$523fb3936f49e028","e","remove","target","textContent","$30d4b9c211fa07a1$var$startPaginationTranding","page","contains","value","console","log","getMoviesOnSearch","$30d4b9c211fa07a1$export$c60ccaec4bb1389f","error","$30d4b9c211fa07a1$var$moviesListContainer","$30d4b9c211fa07a1$var$request","$30d4b9c211fa07a1$var$previousRequest","$30d4b9c211fa07a1$var$totalPages","$30d4b9c211fa07a1$export$e9dce1737af53b91","moviesArr","markup","map","item","dateMarkup","split","$30d4b9c211fa07a1$var$getYear","vote_average","$30d4b9c211fa07a1$export$7aa1764d80425345","$30d4b9c211fa07a1$var$checkPages","arr","total_pages","$30d4b9c211fa07a1$var$paginationNavigation","$30d4b9c211fa07a1$var$startPagination","responseArr","$30d4b9c211fa07a1$export$3565439f0fa482a6","form","preventDefault","firstElementChild","removeEventListener","$7acbff7344447a34$var$genres","$7acbff7344447a34$var$tagsEl","getElementById","$7acbff7344447a34$var$selectedGenre","t","createElement","innerText","url","toggle","includes","idx","splice","$7acbff7344447a34$var$API_URL","encodeURI","fetch","res","json","append"],"version":3,"file":"index.e004777c.js.map"}