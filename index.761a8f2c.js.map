{"mappings":"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","sources":["src/services/trendingPage.js","src/services/addFindMovieInStorage.js","src/services/findMovies.js"],"sourcesContent":["import { getMovies } from './getMovies';\nimport { addMoviesInStorage } from './addFindMovieInStorage';\nimport { checkAndMarkup, cardMarkup } from './findMovies';\n\ngetMovies('genre/movie/list', null, 1).then(response => {\n  localStorage.setItem('genres', JSON.stringify(response.data.genres));\n});\n\nconst getAllGenres = localStorage.getItem('genres');\nconst allGenras = JSON.parse(getAllGenres);\nconst nul = null;\n\nconst trendingMoviesContainer = document.querySelector('.movie-grid-list');\n\nasync function getTrending() {\n  const trendingArray = await getMovies('trending/movie/day', nul, 1);\n\n  const trendingLog = trendingArray.data.results;\n  addMoviesInStorage(trendingLog);\n  renderTrendingMovies(trendingLog);\n\n  backButton.addEventListener('click', paginationNavigation1);\n  nextButton.addEventListener('click', paginationNavigation1);\n\n  // backButton.removeEventListener('click', paginationNavigation)\n  // nextButton.removeEventListener('click', paginationNavigation);\n}\n\nfunction createTrendingCard(moviesArray) {\n  const properDate = makeMovieDate(moviesArray.release_date);\n  const properTitle = makeMovieTitle(moviesArray);\n  let properGenre = getProperGenre(moviesArray.genre_ids);\n  if (!properGenre) {\n    properGenre = 'No info';\n  }\n  if (moviesArray.poster_path) {\n    return `<li class=\"grid-movie-card\"  id=\"${moviesArray.id}\">\n      <div class=\"movie-item \">\n      <div class=\"img-wrapper\">\n        <img\n          class=\"movie-img\"\n          src=\"https://image.tmdb.org/t/p/w500${moviesArray.poster_path}\"\n          alt=\"${properTitle}\"\n          loading=\"lazy\"\n        />\n        </div>\n        <div class=\"movie-info-wrapper\">\n          <div class=\"movie-info data-open\">\n            <h3 class=\"movie-title\">${properTitle}</h3>\n            <ul class=\"thumb\">\n              <li class=\"movie-genre\">${properGenre}</li>\n              <li class=\"movie-date\">| ${properDate}</li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </li>`;\n  } else {\n    return `<li class=\"grid-movie-card\"  id=\"${moviesArray.id}\">\n      <div class=\"movie-item \">\n      <div class=\"img-wrapper img-placeholder\">\n        </div>\n        <div class=\"movie-info-wrapper\">\n          <div class=\"movie-info data-open\">\n            <h3 class=\"movie-title\">${properTitle}</h3>\n            <ul class=\"thumb\">\n              <li class=\"movie-genre\">${properGenre}</li>\n              <li class=\"movie-date\">| ${properDate}</li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </li>`;\n  }\n}\n\nfunction generateTrendingMoveisMarkup(trendingArray) {\n  return trendingArray.reduce(\n    (acc, movie) => acc + createTrendingCard(movie),\n    ''\n  );\n}\n\nexport function renderTrendingMovies(trendingArray) {\n  const trendingMovies = generateTrendingMoveisMarkup(trendingArray);\n  // trendingMoviesContainer.insertAdjacentHTML('beforeend', trendingMovies);\n  trendingMoviesContainer.innerHTML = trendingMovies;\n}\n\nfunction makeMovieDate(date) {\n  const fitDate = date.slice(0, 4);\n  return fitDate;\n}\n\nexport function makeMovieTitle(trendingMovie) {\n  if (trendingMovie.hasOwnProperty('title')) {\n    return trendingMovie.title;\n  }\n  return trendingMovie.name;\n}\n\nexport function getProperGenre(idArray) {\n  const correctGenres = [];\n  for (let i = 0; i < idArray.length; i += 1) {\n    allGenras.forEach(genre => {\n      if (genre.id === idArray[i]) {\n        correctGenres.push(genre.name);\n      }\n    });\n  }\n  if (correctGenres.length >= 2) {\n    return correctGenres.slice(0, 2).join() + ', Other...';\n  }\n  return correctGenres.join();\n}\n\ngetTrending();\n\nconst backButton = document.querySelector('#backButton');\nbackButton.classList.add('hide');\nconst nextButton = document.querySelector('#nextButton');\nlet paginationPageNumber = document.querySelector('#paginationPageNumber');\n\nlet page = 1;\n\nexport function paginationNavigation1(e) {\n  page === 1 || page < 1\n    ? backButton.classList.add('hide')\n    : backButton.classList.remove('hide');\n  if (e.target.id === 'backButton') {\n    page = page - 1;\n    paginationPageNumber.textContent = page;\n    startPaginationTranding(page);\n  } else {\n    page = page + 1;\n    paginationPageNumber.textContent = page;\n    startPaginationTranding(page);\n  }\n  page === 1 || page < 1\n    ? backButton.classList.add('hide')\n    : backButton.classList.remove('hide');\n}\n\nasync function startPaginationTranding(page) {\n  try {\n    const responseArr = await getMovies('trending/movie/day', nul, page);\n    renderTrendingMovies(responseArr.data.results);\n  } catch (error) {\n    console.error(error);\n  }\n}\n","const KEY = \"movies-in-storage\";\n\nexport function addMoviesInStorage(moviesArray) {\n    localStorage.setItem(KEY, JSON.stringify(moviesArray))\n}\n\n","const axios = require('axios').default;\nimport { getMovies, API_URL, API_KEY } from './getMovies';\nimport {\n  makeMovieTitle,\n  getProperGenre,\n  paginationNavigation1,\n} from './trendingPage';\n\n\nconst moviesListContainer = document.querySelector('.movie-grid-list');\nconst formError = document.querySelector('.form__error');\nconst backButton = document.querySelector('#backButton');\nconst nextButton = document.querySelector('#nextButton');\nconst paginadionThumb = document.querySelector('.paginationsContainer')\nlet paginationPageNumber = document.querySelector('#paginationPageNumber');\n\n\nform.addEventListener('submit', findMovies);\nlet request;\nlet page = 1;\n\nasync function findMovies(e) {\n  page = 1;\n  paginationPageNumber.textContent = `${page}`;\n  backButton.classList.add('hide');\n  e.preventDefault();\n  request = e.target.firstElementChild.value;\n  try {\n    const responseArr = await getMovies('search/movie', request, 1);\n\n    errorIsHidden();\n    checkPages(responseArr);\n    checkAndMarkup(responseArr);\n\n    backButton.removeEventListener('click', paginationNavigation1);\n    nextButton.removeEventListener('click', paginationNavigation1);\n\n    backButton.addEventListener('click', paginationNavigation);\n    nextButton.addEventListener('click', paginationNavigation);\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport function clearGalleryList(response) {\n  if (response.status === 200) {\n    moviesListContainer.innerHTML = '';\n    return;\n  }\n  return 'No films';\n}\n\nexport function checkAndMarkup(responseArr) {\n  if (responseArr.data.results.length === 0) {\n    formError.classList.remove('is-hidden');\n    return;\n  } else {\n    cardMarkup(responseArr.data.results);\n  }\n}\n\nexport function cardMarkup(moviesArr) {\n  const markup = moviesArr\n    .map(item => {\n      const dateMarkup = getYear(item.release_date);\n      const properTitle = makeMovieTitle(item);\n      let properGenre = getProperGenre(item.genre_ids);\n      if (!properGenre) {\n        properGenre = 'No info';\n      }\n      if (item.poster_path) {\n        return `<li class=\"grid-movie-card\" id=\"${item.id}\">\n      <div class=\"movie-item\">\n      <div class=\"img-wrapper\">\n        <img class=\"movie-img\"\n        src=\"http://image.tmdb.org/t/p/w500${item.poster_path}\" \n        alt=\"${item.title}\"\n        loading=\"lazy\" />\n        </div>\n        <div class=\"movie-info-wrapper\">\n          <div class=\"movie-info\">\n            <h3 class=\"movie-title\">${properTitle}</h3>\n            <ul class=\"thumb\">\n              <li class=\"movie-genre\">${properGenre}</li>\n              <li class=\"movie-date\">| ${dateMarkup}</li>\n              <li class=\"movie-rating\">${item.vote_average}</li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </li>`;\n      } else {\n        return `<li class=\"grid-movie-card\" id=\"${item.id}>\n      <div class=\"movie-item\">\n      <div class=\"img-wrapper img-placeholder\">\n        </div>\n        <div class=\"movie-info-wrapper\">\n          <div class=\"movie-info\">\n            <h3 class=\"movie-title\">${properTitle}</h3>\n            <ul class=\"thumb\">\n              <li class=\"movie-genre\">${properGenre}</li>\n              <li class=\"movie-date\">| ${dateMarkup}</li>\n              <li class=\"movie-rating\">${item.vote_average}</li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </li>`;\n      }\n    })\n    .join('');\n  moviesListContainer.innerHTML = markup;\n}\n\nfunction getYear(date) {\n  const dateArr = date.split('-');\n  return dateArr[0];\n}\n\nexport function errorIsHidden() {\n  if (!formError.classList.contains('is-hidden')) {\n    formError.classList.add('is-hidden');\n  }\n  return;\n}\n\nfunction checkPages(arr) {\n  if (arr.data.total_pages < 2) {\n    paginadionThumb.classList.add(\"visually-hidden\")\n  } if (arr.data.total_pages >= 2) {\n    paginadionThumb.classList.remove(\"visually-hidden\")\n  }\n  return\n}\n\n\n////////////////////////////////////////////////////////////////////\n\nbackButton.classList.add('hide');\n\n\nfunction paginationNavigation(e) {\n  page === 1 || page < 1\n    ? backButton.classList.add('hide')\n    : backButton.classList.remove('hide');\n  if (e.target.id === 'backButton') {\n    page = page - 1;\n    paginationPageNumber.textContent = page;\n    startPagination(page);\n  } else {\n    page = page + 1;\n    paginationPageNumber.textContent = page;\n    startPagination(page);\n  }\n  page === 1 || page < 1\n    ? backButton.classList.add('hide')\n    : backButton.classList.remove('hide');\n}\n\nasync function startPagination(page) {\n  try {\n    const responseArr = await getMovies('search/movie', request, page);\n    console.log(responseArr);\n    errorIsHidden();\n    checkAndMarkup(responseArr);\n  } catch (error) {\n    console.error(error);\n  }\n}\n"],"names":["$diLRM","parcelRequire","getMovies","then","response","localStorage","setItem","JSON","stringify","data","genres","$30d4b9c211fa07a1$var$getAllGenres","getItem","$30d4b9c211fa07a1$var$allGenras","parse","$30d4b9c211fa07a1$var$trendingMoviesContainer","document","querySelector","$30d4b9c211fa07a1$var$generateTrendingMoveisMarkup","trendingArray","reduce","acc","movie","moviesArray","properDate","release_date","slice","properTitle","$30d4b9c211fa07a1$export$e470e9467189ddc7","properGenre","$30d4b9c211fa07a1$export$6b90e9e6a3a9d62e","genre_ids","poster_path","id","$30d4b9c211fa07a1$var$createTrendingCard","$30d4b9c211fa07a1$export$ae4a60d31ab53252","trendingMovies","innerHTML","trendingMovie","hasOwnProperty","title","name","idArray","correctGenres","i","length","forEach","genre","push","join","async","trendingLog","results","$1vMcC","addMoviesInStorage","$30d4b9c211fa07a1$var$backButton","addEventListener","$30d4b9c211fa07a1$export$d4371eb9638d12b2","$30d4b9c211fa07a1$var$nextButton","$30d4b9c211fa07a1$var$getTrending","classList","add","$30d4b9c211fa07a1$var$paginationPageNumber","$30d4b9c211fa07a1$var$page","e","remove","target","textContent","$30d4b9c211fa07a1$var$startPaginationTranding","page","error","console","$119e13b3a5eba801$export$370b2c7367736e44","default","$2083508b0a26f627$var$moviesListContainer","$2083508b0a26f627$var$formError","$2083508b0a26f627$var$backButton","$2083508b0a26f627$var$nextButton","$2083508b0a26f627$var$paginadionThumb","$2083508b0a26f627$var$request","$2083508b0a26f627$var$paginationPageNumber","form","$2083508b0a26f627$var$page","preventDefault","firstElementChild","value","responseArr","$2083508b0a26f627$export$7aa1764d80425345","arr","total_pages","$2083508b0a26f627$var$checkPages","$2083508b0a26f627$export$3565439f0fa482a6","removeEventListener","$4bVpJ","paginationNavigation1","$2083508b0a26f627$var$paginationNavigation","moviesArr","markup","map","item","dateMarkup","split","makeMovieTitle","getProperGenre","vote_average","$2083508b0a26f627$export$e9dce1737af53b91","contains","$2083508b0a26f627$var$startPagination","log"],"version":3,"file":"index.761a8f2c.js.map"}