{"mappings":"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","sources":["src/services/trendingPage.js","src/services/genreFilter.js"],"sourcesContent":["import { getMovies } from './getMovies';\nimport { addMoviesInStorage } from './addFindMovieInStorage';\n// import { checkAndMarkup, cardMarkup, checkPages, checkLastPage } from './findMovies';\n\ngetMovies('genre/movie/list', null, 1).then(response => {\n  localStorage.setItem('genres', JSON.stringify(response.data.genres));\n});\n\nconst getAllGenres = localStorage.getItem('genres');\nconst allGenras = JSON.parse(getAllGenres);\nconst nul = null;\n\nconst trendingMoviesContainer = document.querySelector('.movie-grid-list');\nconst formError = document.querySelector('.form__error');\n\nasync function getTrending() {\n  const trendingArray = await getMovies('trending/movie/day', nul, 1);\n  const trendingLog = trendingArray.data.results;\n  renderTrendingMovies(trendingLog);\n  \n  backButton.addEventListener('click', paginationNavigation1);\n  nextButton.addEventListener('click', paginationNavigation1);\n\n  // backButton.removeEventListener('click', paginationNavigation)\n  // nextButton.removeEventListener('click', paginationNavigation);\n}\n\nfunction createTrendingCard(moviesArray) {\n  const properDate = makeMovieDate(moviesArray.release_date);\n  const properTitle = makeMovieTitle(moviesArray);\n  let properGenre = getProperGenre(moviesArray.genre_ids);\n  if (!properGenre) {\n    properGenre = 'No info';\n  }\n  if (moviesArray.poster_path) {\n    return `<li class=\"grid-movie-card\"  id=\"${moviesArray.id}\">\n      <div class=\"movie-item \">\n      <div class=\"img-wrapper\">\n        <img\n          class=\"movie-img\"\n          src=\"https://image.tmdb.org/t/p/w500${moviesArray.poster_path}\"\n          alt=\"${properTitle}\"\n          loading=\"lazy\"\n        />\n        </div>\n        <div class=\"movie-info-wrapper\">\n          <div class=\"movie-info data-open\">\n            <h3 class=\"movie-title\">${properTitle}</h3>\n            <ul class=\"thumb\">\n              <li class=\"movie-genre\">${properGenre}</li>\n              <li class=\"movie-date\">| ${properDate}</li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </li>`;\n  } else {\n    return `<li class=\"grid-movie-card\"  id=\"${moviesArray.id}\">\n      <div class=\"movie-item \">\n      <div class=\"img-wrapper img-placeholder\">\n        </div>\n        <div class=\"movie-info-wrapper\">\n          <div class=\"movie-info data-open\">\n            <h3 class=\"movie-title\">${properTitle}</h3>\n            <ul class=\"thumb\">\n              <li class=\"movie-genre\">${properGenre}</li>\n              <li class=\"movie-date\">| ${properDate}</li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </li>`;\n  }\n}\n\nfunction generateTrendingMoveisMarkup(trendingArray) {\n  return trendingArray.reduce(\n    (acc, movie) => acc + createTrendingCard(movie),\n    ''\n  );\n}\n\nexport function renderTrendingMovies(trendingArray) {\n  const trendingMovies = generateTrendingMoveisMarkup(trendingArray);\n  // trendingMoviesContainer.insertAdjacentHTML('beforeend', trendingMovies);\n  trendingMoviesContainer.innerHTML = trendingMovies;\n}\n\nfunction makeMovieDate(date) {\n  const fitDate = date.slice(0, 4);\n  return fitDate;\n}\n\nexport function makeMovieTitle(trendingMovie) {\n  if (trendingMovie.hasOwnProperty('title')) {\n    return trendingMovie.title;\n  }\n  return trendingMovie.name;\n}\n\nexport function getProperGenre(idArray) {\n  const correctGenres = [];\n  for (let i = 0; i < idArray.length; i += 1) {\n    allGenras.forEach(genre => {\n      if (genre.id === idArray[i]) {\n        correctGenres.push(genre.name);\n      }\n    });\n  }\n  if (correctGenres.length >= 2) {\n    return correctGenres.slice(0, 2).join() + ', Other...';\n  }\n  return correctGenres.join();\n}\n\ngetTrending();\n\nconst backButton = document.querySelector('#backButton');\nbackButton.classList.add('hide');\nconst nextButton = document.querySelector('#nextButton');\nlet paginationPageNumber = document.querySelector('#paginationPageNumber');\n\nexport let page = 1;\n\nexport function paginationNavigation1(e) {\n  // debugger\n  page === 1 || page < 1\n    ? backButton.classList.add('hide')\n    : backButton.classList.remove('hide');\n  if (e.target.id === 'backButton') {\n    page = page - 1;\n    paginationPageNumber.textContent = page;\n    startPaginationTranding(page);\n  } else {\n    page = page + 1;\n    paginationPageNumber.textContent = page;\n    startPaginationTranding(page);\n  }\n  page === 1 || page < 1\n    ? backButton.classList.add('hide')\n    : backButton.classList.remove('hide');\n}\n\nasync function startPaginationTranding(page) {\n  // console.log(page);\n  try {\n    if (!formError.classList.contains('is-hidden')) {\n      document.querySelector(\".form__input\").value = \"\";\n      formError.classList.add('is-hidden')\n      \n    }\n    console.log(page);\n    const responseArr = await getMovies('trending/movie/day', nul, page);\n    // checkPages(responseArr);\n    renderTrendingMovies(responseArr.data.results);\n    checkLastPage(page)\n  } catch (error) {\n    console.error(error);\n  }\n}\n\n\n/////////////////////////////////////////////////////////\n/////////////////////////////////////////////////////////\nconst moviesListContainer = document.querySelector('.movie-grid-list');\n\n\nform.addEventListener('submit', findMovies);\nlet request;\nlet previousRequest;\nlet totalPages\n\nasync function findMovies(e) {\n  e.preventDefault();\n  request = e.target.firstElementChild.value;\n  try {\n    const responseArr = await getMovies('search/movie', request, 1);\n    totalPages = responseArr.data.total_pages;\n    if (totalPages > 0) {\n      page = 1;\n    } if (page === 1) {\n    backButton.classList.add('hide');\n    }\n\n    paginationPageNumber.textContent = `${page}`;\n    errorIsHidden();\n\n    if (responseArr.data.results.length === 0) {\n    formError.classList.remove('is-hidden');\n    return\n    } else {\n    previousRequest = request;\n    cardMarkup(responseArr.data.results);\n    checkPages(responseArr);\n  }\n\n    backButton.removeEventListener('click', paginationNavigation1);\n    nextButton.removeEventListener('click', paginationNavigation1);\n\n    backButton.addEventListener('click', paginationNavigation);\n    nextButton.addEventListener('click', paginationNavigation);\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport function clearGalleryList(response) {\n  if (response.status === 200) {\n    moviesListContainer.innerHTML = '';\n    return;\n  }\n  return 'No films';\n}\n\nexport function checkAndMarkup(responseArr) {\n  if (responseArr.data.results.length === 0) {\n    formError.classList.remove('is-hidden');\n    return\n  } else {\n    cardMarkup(responseArr.data.results);\n    checkPages(responseArr);\n  }\n}\n\nexport function cardMarkup(moviesArr) {\n  const markup = moviesArr\n    .map(item => {\n      const dateMarkup = getYear(item);\n      const properTitle = makeMovieTitle(item);\n      let properGenre = getProperGenre(item.genre_ids);\n      if (!properGenre) {\n        properGenre = 'No info';\n      }\n      if (item.poster_path) {\n        return `<li class=\"grid-movie-card\" id=\"${item.id}\">\n      <div class=\"movie-item\">\n      <div class=\"img-wrapper\">\n        <img class=\"movie-img\"\n        src=\"http://image.tmdb.org/t/p/w500${item.poster_path}\" \n        alt=\"${item.title}\"\n        loading=\"lazy\" />\n        </div>\n        <div class=\"movie-info-wrapper\">\n          <div class=\"movie-info\">\n            <h3 class=\"movie-title\">${properTitle}</h3>\n            <ul class=\"thumb\">\n              <li class=\"movie-genre\">${properGenre}</li>\n              <li class=\"movie-date\">| ${dateMarkup}</li>\n              <li class=\"movie-rating\">${item.vote_average}</li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </li>`;\n      } else {\n        return `<li class=\"grid-movie-card\" id=\"${item.id}>\n      <div class=\"movie-item\">\n      <div class=\"img-wrapper img-placeholder\">\n        </div>\n        <div class=\"movie-info-wrapper\">\n          <div class=\"movie-info\">\n            <h3 class=\"movie-title\">${properTitle}</h3>\n            <ul class=\"thumb\">\n              <li class=\"movie-genre\">${properGenre}</li>\n              <li class=\"movie-date\">| ${dateMarkup}</li>\n              <li class=\"movie-rating\">${item.vote_average}</li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </li>`;\n      }\n    })\n    .join('');\n  moviesListContainer.innerHTML = markup;\n}\n\nfunction getYear(item) {\n  if (item.hasOwnProperty(\"release_date\")) {\n    const dateArr = item.release_date.split('-');\n    return dateArr[0];\n  }\n  return \"\"\n}\n\nexport function errorIsHidden() {\n  if (!formError.classList.contains('is-hidden')) {\n    formError.classList.add('is-hidden');\n  }\n}\n\nfunction checkPages(arr) {\n  if (arr.data.total_pages < 2) {\n    nextButton.classList.add('hide')\n  } if (arr.data.total_pages >= 2) {\n    nextButton.classList.remove('hide')\n  }\n}\nexport function checkLastPage(page) {\n  if (page === totalPages) {\n    nextButton.classList.add('hide')\n  }\n}\n\n\n////////////////////////////////////////////////////////////////////\n\nbackButton.classList.add('hide');\n\n\nfunction paginationNavigation(e) {\n  console.log(page);\n  page === 1 || page < 1\n    ? backButton.classList.add('hide')\n    : backButton.classList.remove('hide');\n  if (e.target.id === 'backButton') {\n    page = page - 1;\n    paginationPageNumber.textContent = page;\n    startPagination(page);\n  } else {\n    page = page + 1;\n    paginationPageNumber.textContent = page;\n    startPagination(page);\n  }\n  page === 1 || page < 1\n    ? backButton.classList.add('hide')\n    : backButton.classList.remove('hide');\n}\n\nasync function startPagination(page) {\n  try {\n    console.log(request);\n    console.log(previousRequest);\n    if (!formError.classList.contains('is-hidden')) {\n      document.querySelector(\".form__input\").value = \"\";\n    }\n    const responseArr = await getMovies('search/movie', previousRequest, page);\n \n    errorIsHidden();\n    checkPages(responseArr);\n    checkAndMarkup(responseArr);\n    checkLastPage(page)\n  } catch (error) {\n    console.error(error);\n  }\n}","import {renderTrendingMovies} from './trendingPage'\n\nconst API_KEY = 'api_key=144c01915625ec70297b77a615cc2ea7';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_URL = BASE_URL + '/discover/movie?sort_by=popularity.desc&'+API_KEY;\n\n\n\nfunction getMovies(url) {\n    fetch(url).then(res => res.json()).then(data => {\n        renderTrendingMovies(data.results)\n    })\n}\n\n\n\nconst genres = [\n    {\n      \"id\": 28,\n      \"name\": \"Action\"\n    },\n    {\n      \"id\": 12,\n      \"name\": \"Adventure\"\n    },\n    {\n      \"id\": 16,\n      \"name\": \"Animation\"\n    },\n    {\n      \"id\": 35,\n      \"name\": \"Comedy\"\n    },\n    {\n      \"id\": 80,\n      \"name\": \"Crime\"\n    },\n    {\n      \"id\": 99,\n      \"name\": \"Documentary\"\n    },\n    {\n      \"id\": 18,\n      \"name\": \"Drama\"\n    },\n    {\n      \"id\": 10751,\n      \"name\": \"Family\"\n    },\n    {\n      \"id\": 14,\n      \"name\": \"Fantasy\"\n    },\n    {\n      \"id\": 36,\n      \"name\": \"History\"\n    },\n    {\n      \"id\": 27,\n      \"name\": \"Horror\"\n    },\n    {\n      \"id\": 10402,\n      \"name\": \"Music\"\n    },\n    {\n      \"id\": 9648,\n      \"name\": \"Mystery\"\n    },\n    {\n      \"id\": 10749,\n      \"name\": \"Romance\"\n    },\n    {\n      \"id\": 878,\n      \"name\": \"Science Fiction\"\n    },\n    {\n      \"id\": 10770,\n      \"name\": \"TV Movie\"\n    },\n    {\n      \"id\": 53,\n      \"name\": \"Thriller\"\n    },\n    {\n      \"id\": 10752,\n      \"name\": \"War\"\n    },\n    {\n      \"id\": 37,\n      \"name\": \"Western\"\n    }\n]\n\nconst tagsEl = document.getElementById('tags')\nvar selectedGenre = []\n\nsetGenre();\nfunction setGenre() {\n    tagsEl.innerHTML= '';\n    genres.forEach(genre => {\n        const t = document.createElement('div');\n        t.classList.add('tag');\n        t.id=genre.id;\n        t.innerText = genre.name;\n        t.addEventListener('click', () => {\n            t.classList.toggle('highlight')\n            if(selectedGenre.length == 0){\n                selectedGenre.push(genre.id);\n            }else{\n                if(selectedGenre.includes(genre.id)){\n                    selectedGenre.forEach((id, idx) => {\n                        if(id == genre.id){\n                            selectedGenre.splice(idx, 1);\n                        }\n                    })\n                }else{\n                    selectedGenre.push(genre.id);\n                }\n            }\n            getMovies(API_URL + '&with_genres='+encodeURI(selectedGenre.join(',')))\n            // highlightSelection()\n        })\n        tagsEl.append(t);\n    })\n}\n"],"names":["$7pbsT","parcelRequire","$gEIo3","getMovies","then","response","localStorage","setItem","JSON","stringify","data","genres","$5e93339970c2ee18$var$getAllGenres","getItem","$5e93339970c2ee18$var$allGenras","parse","$5e93339970c2ee18$var$nul","$5e93339970c2ee18$var$trendingMoviesContainer","document","querySelector","$5e93339970c2ee18$var$formError","$5e93339970c2ee18$var$_getTrending","default","$parcel$interopDefault","$2TvXO","mark","_callee","trendingArray","_ctx","sent","$5e93339970c2ee18$export$ae4a60d31ab53252","results","$5e93339970c2ee18$var$backButton","addEventListener","$5e93339970c2ee18$export$d4371eb9638d12b2","$5e93339970c2ee18$var$nextButton","apply","this","arguments","$5e93339970c2ee18$var$generateTrendingMoveisMarkup","reduce","acc","movie","properDate","moviesArray","release_date","slice","properTitle","$5e93339970c2ee18$export$e470e9467189ddc7","properGenre","$5e93339970c2ee18$export$6b90e9e6a3a9d62e","genre_ids","poster_path","concat","id","trendingMovies","innerHTML","trendingMovie","hasOwnProperty","title","name","idArray","forEach","genre","i","correctGenres","push","length","_loop","join","$5e93339970c2ee18$var$getTrending","classList","add","$5e93339970c2ee18$var$paginationPageNumber","$5e93339970c2ee18$export$523fb3936f49e028","e","remove","target","textContent","$5e93339970c2ee18$var$startPaginationTranding","page","$5e93339970c2ee18$var$_startPaginationTranding","contains","value","console","log","$5e93339970c2ee18$export$c60ccaec4bb1389f","error","t0","$5e93339970c2ee18$var$request","$5e93339970c2ee18$var$previousRequest","$5e93339970c2ee18$var$totalPages","$5e93339970c2ee18$var$moviesListContainer","$5e93339970c2ee18$var$_findMovies","responseArr","preventDefault","firstElementChild","total_pages","$5e93339970c2ee18$export$7aa1764d80425345","$5e93339970c2ee18$export$e9dce1737af53b91","$5e93339970c2ee18$var$checkPages","removeEventListener","$5e93339970c2ee18$var$paginationNavigation","$5e93339970c2ee18$export$3565439f0fa482a6","moviesArr","markup","map","item","dateMarkup","split","$5e93339970c2ee18$var$getYear","vote_average","arr","$5e93339970c2ee18$var$startPagination","$5e93339970c2ee18$var$_startPagination","form","$d848946cc02ed0ea$var$genres","$d848946cc02ed0ea$var$tagsEl","getElementById","$d848946cc02ed0ea$var$selectedGenre","t","createElement","innerText","url","toggle","includes","idx","splice","$d848946cc02ed0ea$var$API_URL","encodeURI","fetch","res","json","append"],"version":3,"file":"index.e317ae79.js.map"}